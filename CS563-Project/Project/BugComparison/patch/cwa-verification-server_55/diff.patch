diff --git a/src/main/java/app/coronawarn/verification/config/PostSizeLimitFilter.java b/src/main/java/app/coronawarn/verification/config/PostSizeLimitFilter.java
new file mode 100644
index 00000000..34b76ce3
--- /dev/null
+++ b/src/main/java/app/coronawarn/verification/config/PostSizeLimitFilter.java
@@ -0,0 +1,38 @@
+package app.coronawarn.verification.config;
+
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpMethod;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.stereotype.Component;
+import org.springframework.web.filter.OncePerRequestFilter;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+@Component
+public class PostSizeLimitFilter extends OncePerRequestFilter {
+
+  @Value("${server.max-post-size:10000}")
+  private long maxPostSize;
+
+  @Override
+  protected void doFilterInternal(HttpServletRequest request,
+                                  HttpServletResponse response, FilterChain filterChain)
+    throws ServletException, IOException {
+    if (isPOST(request) && request.getContentLengthLong() > maxPostSize) {
+      response.setStatus(HttpStatus.NOT_ACCEPTABLE.value());
+      return;
+    }
+    filterChain.doFilter(request, response);
+  }
+
+  private boolean isPOST(HttpServletRequest httpRequest) {
+    return HttpMethod.POST.matches(httpRequest.getMethod());
+  }
+
+}
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
index 561f4ac5..82f13839 100644
--- a/src/main/resources/application.yml
+++ b/src/main/resources/application.yml
@@ -12,6 +12,8 @@ spring:
       ddl-auto: validate
   liquibase:
     change-log: classpath:db/changelog.yml
+server:
+  max-post-size: 10000
 feign:
   client:
     config:
