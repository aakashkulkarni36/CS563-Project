Issue #291: fix bug in …/groupBy/tag and …/groupBy/key endpoints when key/values do not exist in keytables
URL: https://github.com/GIScience/ohsome-api/pull/291

Commit ID: 4b2b28e8f0e4b93b572ae24df5c6d8d2d8a7e2aa

Commit Message: various checkstyle fixes

Files Changed (8):
File: src/main/lombok/org/heigit/ohsome/ohsomeapi/inputprocessing/StringSimilarity.java ======================
    - Additions: 0
    - Deletions: 1
=======================================================

    ---Removed (old line 5): import java.util.Collections;

File: src/main/lombok/org/heigit/ohsome/ohsomeapi/oshdb/DbConnData.java ======================
    - Additions: 0
    - Deletions: 1
=======================================================

    ---Removed (old line 5): import org.heigit.ohsome.oshdb.api.db.OSHDBJdbc;

File: src/main/lombok/org/heigit/ohsome/ohsomeapi/utils/ConfigureApplication.java ======================
    - Additions: 2
    - Deletions: 1
=======================================================

    ---Removed (old line 102):    * Method run by the Application class to parse incoming command line arguments
    +++Added (new line 102):    * Method run by the Application class to parse incoming command line arguments.
    +++Added (new line 103):    *

File: src/main/lombok/org/heigit/ohsome/ohsomeapi/utils/FilterUtil.java ======================
    - Additions: 10
    - Deletions: 1
=======================================================

    +++Added (new line 7): /**
    +++Added (new line 8):  * Utility functions for OSHDB filters.
    +++Added (new line 9):  */
    +++Added (new line 13):   /**
    +++Added (new line 14):    * Creates an OSHDB filter which selects OSM objects by their type.
    +++Added (new line 15):    *
    +++Added (new line 16):    * @param types the set of allowed OSM types
    +++Added (new line 17):    * @return a string representing an OSHDB filter matching the given set of OSM types
    +++Added (new line 18):    */
    ---Removed (old line 13):       .collect(Collectors.joining(" or ", "( "," )"));
    +++Added (new line 22):       .collect(Collectors.joining(" or ", "( ", " )"));

File: src/main/lombok/org/heigit/ohsome/ohsomeapi/utils/RequestUtils.java ======================
    - Additions: 0
    - Deletions: 2
=======================================================

    ---Removed (old line 7): import org.heigit.ohsome.ohsomeapi.exception.ExceptionMessages;
    ---Removed (old line 13): import org.heigit.ohsome.oshdb.api.db.OSHDBJdbc;

File: src/test/java/org/heigit/ohsome/ohsomeapi/controller/DataExtractionTest.java ======================
    - Additions: 1
    - Deletions: 1
=======================================================

    ---Removed (old line 95):   
    +++Added (new line 95): 

File: src/test/java/org/heigit/ohsome/ohsomeapi/executor/ContributionsExecutorTest.java ======================
    - Additions: 3
    - Deletions: 1
=======================================================

    +++Added (new line 7): 
    ---Removed (old line 48):     assertThrows(BadRequestException.class, () -> ExecutionUtils.contributionsFilter("doesnotexist"));
    +++Added (new line 49):     assertThrows(BadRequestException.class, () ->
    +++Added (new line 50):         ExecutionUtils.contributionsFilter("doesnotexist"));

File: src/test/java/org/heigit/ohsome/ohsomeapi/inputprocessing/GeometryBuilderTest.java ======================
    - Additions: 8
    - Deletions: 4
=======================================================

    ---Removed (old line 127):     assertThrows(BadRequestException.class, () -> geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    +++Added (new line 127):     assertThrows(BadRequestException.class, () ->
    +++Added (new line 128):         geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    ---Removed (old line 139):     assertThrows(BadRequestException.class, () -> geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    +++Added (new line 140):     assertThrows(BadRequestException.class, () ->
    +++Added (new line 141):         geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    ---Removed (old line 146):     assertThrows(BadRequestException.class, () -> geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    +++Added (new line 148):     assertThrows(BadRequestException.class, () ->
    +++Added (new line 149):         geomBuilder.createGeometryFromGeoJson(geoJson, inputProcessor));
    ---Removed (old line 197):     assertThrows(RuntimeException.class, () ->geomBuilder.createGeometryFromMetadataGeoJson(geoJson));
    +++Added (new line 200):     assertThrows(RuntimeException.class, () ->
    +++Added (new line 201):         geomBuilder.createGeometryFromMetadataGeoJson(geoJson));

