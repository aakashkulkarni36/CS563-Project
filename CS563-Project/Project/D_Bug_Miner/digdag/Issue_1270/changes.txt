Issue #1270: Remove task request sending from digdag-metrics.
URL: https://github.com/treasure-data/digdag/pull/1270

Commit ID: 4a778da8e98d9052f5ff9932f9e7ffd2e4fbaa3e

Commit Message: Remove tag from metrics.

For future use, OperatorManager's metrics add task info as tag.
And currently JMX and fluency Meterregistry try to remove before sending, because it is noisy.
But it may cause incorrect metrics. So I removed that functionality.
In the future, if required to get task request, another implementation is better.

Files Changed (3):
File: digdag-core/src/main/java/io/digdag/core/agent/OperatorManager.java ======================
    - Additions: 5
    - Deletions: 5
=======================================================

    ---Removed (old line 112):     @DigdagTimed(value = "opm_", category = "agent", taskRequest = true, appendMethodName = true)
    +++Added (new line 112):     @DigdagTimed(value = "opm_", category = "agent", appendMethodName = true)
    ---Removed (old line 138):     @DigdagTimed(value = "opm_", category = "agent", taskRequest = true, appendMethodName = true)
    +++Added (new line 138):     @DigdagTimed(value = "opm_", category = "agent", appendMethodName = true)
    ---Removed (old line 184):     @DigdagTimed(value = "opm_", category = "agent", taskRequest = true, appendMethodName = true)
    +++Added (new line 184):     @DigdagTimed(value = "opm_", category = "agent", appendMethodName = true)
    ---Removed (old line 205):     @DigdagTimed(value = "opm_", category = "agent", taskRequest = true, appendMethodName = true)
    +++Added (new line 205):     @DigdagTimed(value = "opm_", category = "agent", appendMethodName = true)
    ---Removed (old line 296):     @DigdagTimed(value = "opm_", category = "agent", taskRequest = true, appendMethodName = true)
    +++Added (new line 296):     @DigdagTimed(value = "opm_", category = "agent", appendMethodName = true)

File: digdag-server/src/main/java/io/digdag/server/metrics/DigdagMetricsModule.java ======================
    - Additions: 2
    - Deletions: 7
=======================================================

    ---Removed (old line 12): import io.digdag.server.metrics.jmx.DigdagJmxMeterRegistry;
    ---Removed (old line 109):         // Use DigdagJmxMeterRegistry to disable all metrics tag. Some metrics send TaskRequest as metrics tag
    ---Removed (old line 110):         // and it is very noisy for JMX
    ---Removed (old line 111):         return new DigdagJmxMeterRegistry(createJmxConfig(categoryToJMXdomain.get(category)), Clock.SYSTEM);
    +++Added (new line 108):         return new JmxMeterRegistry(createJmxConfig(categoryToJMXdomain.get(category)), Clock.SYSTEM);
    ---Removed (old line 135):         //disableMetricsTagValue is set to true to avoid TaskRequest is added in some metrics.
    ---Removed (old line 136):         //ToDo make it configurable in future.
    ---Removed (old line 137):         FluencyRegistryConfig regConfig = FluencyRegistryConfig.apply(fconfig.getTag(), "digdag", Duration.ofSeconds(fconfig.getStep()), true);
    +++Added (new line 132):         FluencyRegistryConfig regConfig = FluencyRegistryConfig.apply(fconfig.getTag(), "digdag", Duration.ofSeconds(fconfig.getStep()), false);

File: digdag-server/src/main/java/io/digdag/server/metrics/jmx/DigdagJmxMeterRegistry.java ======================
    - Additions: 0
    - Deletions: 60
=======================================================

    ---Removed (old line 1): package io.digdag.server.metrics.jmx;
    ---Removed (old line 2): 
    ---Removed (old line 3): import io.micrometer.core.instrument.Clock;
    ---Removed (old line 4): import io.micrometer.core.instrument.Counter;
    ---Removed (old line 5): import io.micrometer.core.instrument.DistributionSummary;
    ---Removed (old line 6): import io.micrometer.core.instrument.Gauge;
    ---Removed (old line 7): import io.micrometer.core.instrument.Meter;
    ---Removed (old line 8): import io.micrometer.core.instrument.Tags;
    ---Removed (old line 9): import io.micrometer.core.instrument.Timer;
    ---Removed (old line 10): import io.micrometer.core.instrument.distribution.DistributionStatisticConfig;
    ---Removed (old line 11): import io.micrometer.core.instrument.distribution.pause.PauseDetector;
    ---Removed (old line 12): import io.micrometer.core.instrument.util.HierarchicalNameMapper;
    ---Removed (old line 13): import io.micrometer.core.lang.Nullable;
    ---Removed (old line 14): import io.micrometer.jmx.JmxConfig;
    ---Removed (old line 15): import io.micrometer.jmx.JmxMeterRegistry;
    ---Removed (old line 16): import org.slf4j.Logger;
    ---Removed (old line 17): import org.slf4j.LoggerFactory;
    ---Removed (old line 18): 
    ---Removed (old line 19): import java.util.function.ToDoubleFunction;
    ---Removed (old line 20): 
    ---Removed (old line 21): /**
    ---Removed (old line 22):  * Ignore tag because tag is appended to the MBean name and it is very noisy.
    ---Removed (old line 23):  */
    ---Removed (old line 24): public class DigdagJmxMeterRegistry extends JmxMeterRegistry
    ---Removed (old line 25): {
    ---Removed (old line 26):     private static final Logger logger = LoggerFactory.getLogger(DigdagJmxMeterRegistry.class);
    ---Removed (old line 27): 
    ---Removed (old line 28):     public DigdagJmxMeterRegistry(JmxConfig config, Clock clock)
    ---Removed (old line 29):     {
    ---Removed (old line 30):         super(config, clock, HierarchicalNameMapper.DEFAULT);
    ---Removed (old line 31):     }
    ---Removed (old line 32): 
    ---Removed (old line 33):     @Override
    ---Removed (old line 34):     protected Counter newCounter(Meter.Id id) {
    ---Removed (old line 35):         return super.newCounter(removeTags(id));
    ---Removed (old line 36):     }
    ---Removed (old line 37): 
    ---Removed (old line 38):     @Override
    ---Removed (old line 39):     protected <T> Gauge newGauge(Meter.Id id, @Nullable T obj, ToDoubleFunction<T> valueFunction) {
    ---Removed (old line 40):         return super.newGauge(removeTags(id), obj, valueFunction);
    ---Removed (old line 41):     }
    ---Removed (old line 42): 
    ---Removed (old line 43):     @Override
    ---Removed (old line 44):     protected Timer newTimer(Meter.Id id, DistributionStatisticConfig distributionStatisticConfig, PauseDetector pauseDetector)
    ---Removed (old line 45):     {
    ---Removed (old line 46):         return super.newTimer(removeTags(id), distributionStatisticConfig, pauseDetector);
    ---Removed (old line 47):     }
    ---Removed (old line 48): 
    ---Removed (old line 49):     @Override
    ---Removed (old line 50):     protected DistributionSummary newDistributionSummary(Meter.Id id, DistributionStatisticConfig distributionStatisticConfig, double scale)
    ---Removed (old line 51):     {
    ---Removed (old line 52):         return super.newDistributionSummary(removeTags(id), distributionStatisticConfig, scale);
    ---Removed (old line 53):     }
    ---Removed (old line 54): 
    ---Removed (old line 55):     protected Meter.Id removeTags(Meter.Id id)
    ---Removed (old line 56):     {
    ---Removed (old line 57):         Meter.Id newId = new Meter.Id(id.getName(), Tags.empty(), id.getBaseUnit(), id.getDescription(), id.getType());
    ---Removed (old line 58):         return newId;
    ---Removed (old line 59):     }
    ---Removed (old line 60): }

