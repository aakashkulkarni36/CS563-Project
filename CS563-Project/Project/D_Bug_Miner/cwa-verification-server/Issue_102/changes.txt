Issue #102: fix: Validation on Input Parameter (Issue #33)
URL: https://github.com/corona-warn-app/cwa-verification-server/pull/102

Commit ID: eddee7894579153fd72fd5434b4f1b407b5d4576

Commit Message: Merge branch 'fix/checkRequestFields' of https://github.com/corona-warn-app/cwa-verification-server into fix/checkRequestFields

Files Changed (8):
File: src/main/java/app/coronawarn/verification/VerificationApplication.java ======================
    - Additions: 2
    - Deletions: 0
=======================================================

    +++Added (new line 29): import org.springframework.scheduling.annotation.EnableScheduling;
    +++Added (new line 33): @EnableScheduling

File: src/main/java/app/coronawarn/verification/config/VerificationApplicationConfig.java ======================
    - Additions: 38
    - Deletions: 11
=======================================================

    ---Removed (old line 30):  * It is loaded via the @EnableConfigurationProperties annotation from SpringBootApplication main class. */
    +++Added (new line 30):  * It is loaded via the @EnableConfigurationProperties annotation from SpringBootApplication main class.
    +++Added (new line 31):  */
    +++Added (new line 32): @Getter
    +++Added (new line 33): @Setter
    +++Added (new line 37):   private TanCfg tan;
    +++Added (new line 38):   private AppSessionCfg appsession;
    +++Added (new line 39):   private EntitiesCfg entities;
    +++Added (new line 40): 
    +++Added (new line 42):     @Getter
    +++Added (new line 43):     @Setter
    +++Added (new line 44):     private TeleValidCfg valid;
    +++Added (new line 45): 
    ---Removed (old line 36):       @Getter @Setter private int hours;
    +++Added (new line 47):       @Getter
    +++Added (new line 48):       @Setter
    +++Added (new line 49):       private int hours;
    ---Removed (old line 38): 
    ---Removed (old line 39):     @Getter @Setter private TeleValidCfg valid;
    ---Removed (old line 43):     @Getter @Setter int days;
    +++Added (new line 54):     @Getter
    +++Added (new line 55):     @Setter
    +++Added (new line 56):     int days;
    ---Removed (old line 47):     @Getter @Setter private TeleCfg tele;
    ---Removed (old line 48):     @Getter @Setter private ValidCfg valid;
    +++Added (new line 60):     @Getter
    +++Added (new line 61):     @Setter
    +++Added (new line 62):     private TeleCfg tele;
    +++Added (new line 63):     @Getter
    +++Added (new line 64):     @Setter
    +++Added (new line 65):     private ValidCfg valid;
    ---Removed (old line 52):     @Getter @Setter int tancountermax;
    +++Added (new line 69):     @Getter
    +++Added (new line 70):     @Setter
    +++Added (new line 71):     int tancountermax;
    ---Removed (old line 54):   
    ---Removed (old line 55):   @Getter @Setter private TanCfg tan;
    ---Removed (old line 56):   @Getter @Setter private AppSessionCfg appsession;
    +++Added (new line 74):   public static class EntitiesCfg {
    +++Added (new line 75):     @Getter
    +++Added (new line 76):     @Setter
    +++Added (new line 77):     private CleanupCfg cleanup;
    +++Added (new line 78):   }
    +++Added (new line 79): 
    +++Added (new line 80):   public static class CleanupCfg {
    +++Added (new line 81):     @Getter
    +++Added (new line 82):     @Setter
    +++Added (new line 83):     private Integer days;
    +++Added (new line 84):   }

File: src/main/java/app/coronawarn/verification/repository/VerificationAppSessionRepository.java ======================
    - Additions: 4
    - Deletions: 0
=======================================================

    +++Added (new line 25): import java.time.LocalDateTime;
    +++Added (new line 33): 
    +++Added (new line 35): 
    +++Added (new line 36):   void deleteByCreatedAtBefore(LocalDateTime before);

File: src/main/java/app/coronawarn/verification/repository/VerificationTanRepository.java ======================
    - Additions: 7
    - Deletions: 1
=======================================================

    +++Added (new line 25): import java.time.LocalDateTime;
    +++Added (new line 26): import java.util.Optional;
    ---Removed (old line 28):  * This class represents the AppSession repository.
    +++Added (new line 30):  * This class represents the Tan repository.
    +++Added (new line 35): 
    +++Added (new line 36):   Optional<VerificationTan> findByTanHash(String tanHash);
    +++Added (new line 37): 
    +++Added (new line 38):   void deleteByCreatedAtBefore(LocalDateTime before);

File: src/main/java/app/coronawarn/verification/service/EntitiesCleanupService.java ======================
    - Additions: 58
    - Deletions: 0
=======================================================

    +++Added (new line 1): /*
    +++Added (new line 2):  * Corona-Warn-App / cwa-verification
    +++Added (new line 3):  *
    +++Added (new line 4):  * (C) 2020, T-Systems International GmbH
    +++Added (new line 5):  *
    +++Added (new line 6):  * Deutsche Telekom AG and all other contributors /
    +++Added (new line 7):  * copyright owners license this file to you under the Apache
    +++Added (new line 8):  * License, Version 2.0 (the "License"); you may not use this
    +++Added (new line 9):  * file except in compliance with the License.
    +++Added (new line 10):  * You may obtain a copy of the License at
    +++Added (new line 11):  *
    +++Added (new line 12):  * http://www.apache.org/licenses/LICENSE-2.0
    +++Added (new line 13):  *
    +++Added (new line 14):  * Unless required by applicable law or agreed to in writing,
    +++Added (new line 15):  * software distributed under the License is distributed on an
    +++Added (new line 16):  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    +++Added (new line 17):  * KIND, either express or implied.  See the License for the
    +++Added (new line 18):  * specific language governing permissions and limitations
    +++Added (new line 19):  * under the License.
    +++Added (new line 20):  */
    +++Added (new line 21): 
    +++Added (new line 22): package app.coronawarn.verification.service;
    +++Added (new line 23): 
    +++Added (new line 24): import app.coronawarn.verification.config.VerificationApplicationConfig;
    +++Added (new line 25): import app.coronawarn.verification.repository.VerificationAppSessionRepository;
    +++Added (new line 26): import app.coronawarn.verification.repository.VerificationTanRepository;
    +++Added (new line 27): import java.time.LocalDateTime;
    +++Added (new line 28): import java.time.Period;
    +++Added (new line 29): import javax.transaction.Transactional;
    +++Added (new line 30): import lombok.RequiredArgsConstructor;
    +++Added (new line 31): import lombok.extern.slf4j.Slf4j;
    +++Added (new line 32): import org.springframework.scheduling.annotation.Scheduled;
    +++Added (new line 33): import org.springframework.stereotype.Component;
    +++Added (new line 34): 
    +++Added (new line 35): @Slf4j
    +++Added (new line 36): @RequiredArgsConstructor
    +++Added (new line 37): @Component
    +++Added (new line 38): public class EntitiesCleanupService {
    +++Added (new line 39): 
    +++Added (new line 40):   private final VerificationApplicationConfig applicationConfig;
    +++Added (new line 41):   private final VerificationAppSessionRepository appSessionRepository;
    +++Added (new line 42):   private final VerificationTanRepository tanRepository;
    +++Added (new line 43): 
    +++Added (new line 44):   /**
    +++Added (new line 45):    * All entities that are older than configured days should get deleted.
    +++Added (new line 46):    */
    +++Added (new line 47):   @Scheduled(
    +++Added (new line 48):     fixedDelayString = "${entities.cleanup.rate}"
    +++Added (new line 49):   )
    +++Added (new line 50):   @Transactional
    +++Added (new line 51):   public void cleanup() {
    +++Added (new line 52):     log.info("EntitiesCleanupService cleanup()");
    +++Added (new line 53):     appSessionRepository.deleteByCreatedAtBefore(LocalDateTime.now()
    +++Added (new line 54):       .minus(Period.ofDays(applicationConfig.getEntities().getCleanup().getDays())));
    +++Added (new line 55):     tanRepository.deleteByCreatedAtBefore(LocalDateTime.now()
    +++Added (new line 56):       .minus(Period.ofDays(applicationConfig.getEntities().getCleanup().getDays())));
    +++Added (new line 57):   }
    +++Added (new line 58): }

File: src/main/java/app/coronawarn/verification/service/TanService.java ======================
    - Additions: 2
    - Deletions: 6
=======================================================

    ---Removed (old line 40): import org.springframework.data.domain.Example;
    ---Removed (old line 41): import org.springframework.data.domain.ExampleMatcher;
    ---Removed (old line 76):   private VerificationApplicationConfig verificationApplicationConfig;
    +++Added (new line 74):   private final VerificationApplicationConfig verificationApplicationConfig;
    ---Removed (old line 251):     VerificationTan tanEntity = new VerificationTan();
    ---Removed (old line 252):     tanEntity.setTanHash(hashingService.hash(tan));
    ---Removed (old line 253):     return tanRepository.findOne(Example.of(tanEntity, ExampleMatcher.matching()));
    +++Added (new line 249):     return tanRepository.findByTanHash(hashingService.hash(tan));

File: src/main/resources/application.yml ======================
    - Additions: 36
    - Deletions: 32
=======================================================

    ---Removed (old line 1): spring:
    ---Removed (old line 2):   application:
    ---Removed (old line 3):     name: verification-server
    ---Removed (old line 4):   datasource:
    ---Removed (old line 5):     driver-class-name: org.h2.Driver
    ---Removed (old line 6):     url: jdbc:h2:mem:verification
    ---Removed (old line 7):     username: sa
    ---Removed (old line 8):     password: ''
    ---Removed (old line 9):   jpa:
    ---Removed (old line 10):     database-platform: org.hibernate.dialect.H2Dialect
    ---Removed (old line 11):     hibernate:
    ---Removed (old line 12):       ddl-auto: validate
    ---Removed (old line 13):   liquibase:
    ---Removed (old line 14):     change-log: classpath:db/changelog.yml
    ---Removed (old line 15): feign:
    ---Removed (old line 16):   client:
    ---Removed (old line 17):     config:
    ---Removed (old line 18):       default:
    ---Removed (old line 19):         connect-timeout: 5000
    ---Removed (old line 20):         read-timeout: 5000
    ---Removed (old line 21):         logger-level: basic
    ---Removed (old line 22): tan:
    ---Removed (old line 23):   tele:
    ---Removed (old line 24):     valid:
    ---Removed (old line 25):       hours: 1
    ---Removed (old line 26):   valid:
    ---Removed (old line 27):     days: 14
    ---Removed (old line 28): appsession:
    ---Removed (old line 29):   tancountermax: 2
    ---Removed (old line 30): uri:
    ---Removed (old line 31):   endpoint:
    ---Removed (old line 32):     labserver: http://localhost:8088
    +++Added (new line 1): spring:
    +++Added (new line 2):   application:
    +++Added (new line 3):     name: verification-server
    +++Added (new line 4):   datasource:
    +++Added (new line 5):     driver-class-name: org.h2.Driver
    +++Added (new line 6):     url: jdbc:h2:mem:verification
    +++Added (new line 7):     username: sa
    +++Added (new line 8):     password: ''
    +++Added (new line 9):   jpa:
    +++Added (new line 10):     database-platform: org.hibernate.dialect.H2Dialect
    +++Added (new line 11):     hibernate:
    +++Added (new line 12):       ddl-auto: validate
    +++Added (new line 13):   liquibase:
    +++Added (new line 14):     change-log: classpath:db/changelog.yml
    +++Added (new line 15): feign:
    +++Added (new line 16):   client:
    +++Added (new line 17):     config:
    +++Added (new line 18):       default:
    +++Added (new line 19):         connect-timeout: 5000
    +++Added (new line 20):         read-timeout: 5000
    +++Added (new line 21):         logger-level: basic
    +++Added (new line 22): tan:
    +++Added (new line 23):   tele:
    +++Added (new line 24):     valid:
    +++Added (new line 25):       hours: 1
    +++Added (new line 26):   valid:
    +++Added (new line 27):     days: 14
    +++Added (new line 28): appsession:
    +++Added (new line 29):   tancountermax: 2
    +++Added (new line 30): uri:
    +++Added (new line 31):   endpoint:
    +++Added (new line 32):     labserver: http://localhost:8088
    +++Added (new line 33): entities:
    +++Added (new line 34):   cleanup:
    +++Added (new line 35):     days: 14
    +++Added (new line 36):     rate: 60000

File: src/test/java/app/coronawarn/verification/service/EntitiesCleanupServiceTest.java ======================
    - Additions: 124
    - Deletions: 0
=======================================================

    +++Added (new line 1): /*
    +++Added (new line 2):  * Corona-Warn-App / cwa-verification
    +++Added (new line 3):  *
    +++Added (new line 4):  * (C) 2020, T-Systems International GmbH
    +++Added (new line 5):  *
    +++Added (new line 6):  * Deutsche Telekom AG and all other contributors /
    +++Added (new line 7):  * copyright owners license this file to you under the Apache
    +++Added (new line 8):  * License, Version 2.0 (the "License"); you may not use this
    +++Added (new line 9):  * file except in compliance with the License.
    +++Added (new line 10):  * You may obtain a copy of the License at
    +++Added (new line 11):  *
    +++Added (new line 12):  * http://www.apache.org/licenses/LICENSE-2.0
    +++Added (new line 13):  *
    +++Added (new line 14):  * Unless required by applicable law or agreed to in writing,
    +++Added (new line 15):  * software distributed under the License is distributed on an
    +++Added (new line 16):  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    +++Added (new line 17):  * KIND, either express or implied.  See the License for the
    +++Added (new line 18):  * specific language governing permissions and limitations
    +++Added (new line 19):  * under the License.
    +++Added (new line 20):  */
    +++Added (new line 21): 
    +++Added (new line 22): package app.coronawarn.verification.service;
    +++Added (new line 23): 
    +++Added (new line 24): import app.coronawarn.verification.VerificationApplication;
    +++Added (new line 25): import app.coronawarn.verification.domain.VerificationAppSession;
    +++Added (new line 26): import app.coronawarn.verification.domain.VerificationTan;
    +++Added (new line 27): import app.coronawarn.verification.model.AppSessionSourceOfTrust;
    +++Added (new line 28): import app.coronawarn.verification.model.TanSourceOfTrust;
    +++Added (new line 29): import app.coronawarn.verification.repository.VerificationAppSessionRepository;
    +++Added (new line 30): import app.coronawarn.verification.repository.VerificationTanRepository;
    +++Added (new line 31): import org.junit.Assert;
    +++Added (new line 32): import org.junit.Before;
    +++Added (new line 33): import org.junit.Test;
    +++Added (new line 34): import org.junit.runner.RunWith;
    +++Added (new line 35): import org.springframework.beans.factory.annotation.Autowired;
    +++Added (new line 36): import org.springframework.boot.test.context.SpringBootTest;
    +++Added (new line 37): import org.springframework.test.context.ContextConfiguration;
    +++Added (new line 38): import org.springframework.test.context.junit4.SpringRunner;
    +++Added (new line 39): import rx.Single;
    +++Added (new line 40): 
    +++Added (new line 41): import java.time.LocalDateTime;
    +++Added (new line 42): import java.time.Period;
    +++Added (new line 43): import java.util.Optional;
    +++Added (new line 44): import java.util.concurrent.TimeUnit;
    +++Added (new line 45): 
    +++Added (new line 46): @RunWith(SpringRunner.class)
    +++Added (new line 47): @SpringBootTest(
    +++Added (new line 48):   properties = {
    +++Added (new line 49):     "entities.cleanup.rate=1000"
    +++Added (new line 50):   }
    +++Added (new line 51): )
    +++Added (new line 52): @ContextConfiguration(classes = VerificationApplication.class)
    +++Added (new line 53): public class EntitiesCleanupServiceTest {
    +++Added (new line 54): 
    +++Added (new line 55):   public static final String TEST_GUI_HASH = "f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b";
    +++Added (new line 56):   public static final String TEST_REG_TOK_HASH = "c775e7b757ede630cd0aa1113bd102661ab38829ca52a6422ab782862f268646";
    +++Added (new line 57):   public static final String TEST_HASHED_TAN = "16154ea91c2c59d6ef9d0e7f902a59283b1e7ff9111570d20139a4e6b1832876";
    +++Added (new line 58): 
    +++Added (new line 59):   @Autowired
    +++Added (new line 60):   private VerificationAppSessionRepository appSessionRepository;
    +++Added (new line 61): 
    +++Added (new line 62):   @Autowired
    +++Added (new line 63):   private VerificationTanRepository tanRepository;
    +++Added (new line 64): 
    +++Added (new line 65):   @Before
    +++Added (new line 66):   public void before() {
    +++Added (new line 67):     appSessionRepository.deleteAll();
    +++Added (new line 68):     tanRepository.deleteAll();
    +++Added (new line 69):   }
    +++Added (new line 70): 
    +++Added (new line 71):   @Test
    +++Added (new line 72):   public void cleanupDatabaseTest() {
    +++Added (new line 73):     LocalDateTime testCreationTime = LocalDateTime.now().minus(Period.ofDays(14));
    +++Added (new line 74):     // create repo 1
    +++Added (new line 75):     VerificationAppSession session = appSessionRepository.save(getAppSessionTestData(testCreationTime));
    +++Added (new line 76):     Assert.assertNotNull(session);
    +++Added (new line 77):     Assert.assertEquals(TEST_GUI_HASH, session.getHashedGuid());
    +++Added (new line 78):     // create repo 2
    +++Added (new line 79):     VerificationTan tan = tanRepository.save(getVerificationTANTestData(testCreationTime));
    +++Added (new line 80):     Assert.assertNotNull(tan);
    +++Added (new line 81):     Assert.assertEquals(TEST_HASHED_TAN, tan.getTanHash());
    +++Added (new line 82):     // find in repos
    +++Added (new line 83):     Optional<VerificationAppSession> findSession = appSessionRepository.findByRegistrationTokenHash(TEST_REG_TOK_HASH);
    +++Added (new line 84):     Assert.assertTrue(findSession.isPresent());
    +++Added (new line 85):     Assert.assertEquals(TEST_GUI_HASH, findSession.get().getHashedGuid());
    +++Added (new line 86): 
    +++Added (new line 87):     Assert.assertEquals(testCreationTime.withNano(5), findSession.get().getCreatedAt().withNano(5));
    +++Added (new line 88):     Optional<VerificationTan> findTan = tanRepository.findByTanHash(TEST_HASHED_TAN);
    +++Added (new line 89):     Assert.assertTrue(findTan.isPresent());
    +++Added (new line 90):     Assert.assertEquals(TEST_HASHED_TAN, findTan.get().getTanHash());
    +++Added (new line 91):     Assert.assertEquals(testCreationTime.withNano(5), findTan.get().getCreatedAt().withNano(5));
    +++Added (new line 92):     // wait
    +++Added (new line 93):     Single.fromCallable(() -> true).delay(1, TimeUnit.SECONDS).toBlocking().value();
    +++Added (new line 94):     // find and check repos clean up
    +++Added (new line 95):     findSession = appSessionRepository.findByRegistrationTokenHash(TEST_REG_TOK_HASH);
    +++Added (new line 96):     Assert.assertFalse(findSession.isPresent());
    +++Added (new line 97):     findTan = tanRepository.findByTanHash(TEST_HASHED_TAN);
    +++Added (new line 98):     Assert.assertFalse(findTan.isPresent());
    +++Added (new line 99):   }
    +++Added (new line 100): 
    +++Added (new line 101):   private VerificationAppSession getAppSessionTestData(LocalDateTime testCreationTime) {
    +++Added (new line 102):     VerificationAppSession cv = new VerificationAppSession();
    +++Added (new line 103):     cv.setHashedGuid(TEST_GUI_HASH);
    +++Added (new line 104):     cv.setCreatedAt(testCreationTime);
    +++Added (new line 105):     cv.setUpdatedAt(LocalDateTime.now());
    +++Added (new line 106):     cv.setTanCounter(0);
    +++Added (new line 107):     cv.setSourceOfTrust(AppSessionSourceOfTrust.HASHED_GUID);
    +++Added (new line 108):     cv.setRegistrationTokenHash(TEST_REG_TOK_HASH);
    +++Added (new line 109):     return cv;
    +++Added (new line 110):   }
    +++Added (new line 111): 
    +++Added (new line 112):   private VerificationTan getVerificationTANTestData(LocalDateTime testCreationTime) {
    +++Added (new line 113):     VerificationTan cvtan = new VerificationTan();
    +++Added (new line 114):     cvtan.setCreatedAt(testCreationTime);
    +++Added (new line 115):     cvtan.setUpdatedAt(LocalDateTime.now());
    +++Added (new line 116):     cvtan.setRedeemed(false);
    +++Added (new line 117):     cvtan.setSourceOfTrust(TanSourceOfTrust.CONNECTED_LAB);
    +++Added (new line 118):     cvtan.setTanHash(TEST_HASHED_TAN);
    +++Added (new line 119):     cvtan.setType("TAN");
    +++Added (new line 120):     cvtan.setValidFrom(LocalDateTime.now().minusDays(5));
    +++Added (new line 121):     cvtan.setValidUntil(LocalDateTime.now().plusDays(7));
    +++Added (new line 122):     return cvtan;
    +++Added (new line 123):   }
    +++Added (new line 124): }

