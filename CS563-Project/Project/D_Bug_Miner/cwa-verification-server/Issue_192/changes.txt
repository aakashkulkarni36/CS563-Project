Issue #192: fix: update openAPI docs to meet v1.2.0
URL: https://github.com/corona-warn-app/cwa-verification-server/pull/192

Commit ID: f1bbea641a339791347ba78098d12acac99c0b6b

Commit Message: fix: update openAPI docs to meet v1.2.0

Files Changed (1):
File: api-docs.json ======================
    - Additions: 303
    - Deletions: 215
=======================================================

    ---Removed (old line 2):   "openapi":"3.0.1",
    ---Removed (old line 3):   "info":{
    ---Removed (old line 4):     "title":"cwa-verification-server",
    ---Removed (old line 5):     "description":"OpenApi documentation of cwa-verification-server",
    ---Removed (old line 6):     "license":{
    ---Removed (old line 7):       "name":"Apache 2.0",
    ---Removed (old line 8):       "url":"http://www.apache.org/licenses/LICENSE-2.0"
    +++Added (new line 2):   "openapi": "3.0.1",
    +++Added (new line 3):   "info": {
    +++Added (new line 4):     "title": "cwa-verification-server",
    +++Added (new line 5):     "license": {
    +++Added (new line 6):       "name": "Apache 2.0",
    +++Added (new line 7):       "url": "http://www.apache.org/licenses/LICENSE-2.0"
    ---Removed (old line 10):     "version":"0.3.2-SNAPSHOT"
    +++Added (new line 9):     "version": "1.2.0-SNAPSHOT"
    ---Removed (old line 12):   "servers":[
    +++Added (new line 11):   "servers": [
    ---Removed (old line 14):       "url":"http://localhost:8080",
    ---Removed (old line 15):       "description":"Generated server url"
    +++Added (new line 13):       "url": "http://localhost:8080",
    +++Added (new line 14):       "description": "Generated server url"
    ---Removed (old line 18):   "paths":{
    ---Removed (old line 19):     "/version/v1/registrationToken":{
    ---Removed (old line 20):       "post":{
    ---Removed (old line 21):         "tags":[
    ---Removed (old line 22):           "verification-controller"
    +++Added (new line 17):   "paths": {
    +++Added (new line 18):     "/version/v1/tan": {
    +++Added (new line 19):       "post": {
    +++Added (new line 20):         "tags": [
    +++Added (new line 21):           "external-tan-controller"
    ---Removed (old line 24):         "summary":"Get registration Token",
    ---Removed (old line 25):         "description":"Get a registration token by providing a SHA-256 hashed GUID or a TeleTAN",
    ---Removed (old line 26):         "operationId":"generateRegistrationToken",
    ---Removed (old line 27):         "requestBody":{
    ---Removed (old line 28):           "content":{
    ---Removed (old line 29):             "application/json":{
    ---Removed (old line 30):               "schema":{
    ---Removed (old line 31):                 "$ref":"#/components/schemas/RegistrationTokenRequest"
    +++Added (new line 23):         "summary": "Generates a Tan",
    +++Added (new line 24):         "description": "Generates a TAN on input of Registration Token. With the TAN one can submit his Diagnosis keys",
    +++Added (new line 25):         "operationId": "generateTan",
    +++Added (new line 26):         "parameters": [
    +++Added (new line 27):           {
    +++Added (new line 28):             "name": "cwa-fake",
    +++Added (new line 29):             "in": "header",
    +++Added (new line 30):             "required": false,
    +++Added (new line 31):             "schema": {
    +++Added (new line 32):               "type": "string"
    +++Added (new line 33):             }
    +++Added (new line 34):           }
    +++Added (new line 35):         ],
    +++Added (new line 36):         "requestBody": {
    +++Added (new line 37):           "content": {
    +++Added (new line 38):             "application/json": {
    +++Added (new line 39):               "schema": {
    +++Added (new line 40):                 "$ref": "#/components/schemas/RegistrationToken"
    ---Removed (old line 35):           "required":true
    +++Added (new line 44):           "required": true
    ---Removed (old line 37):         "responses":{
    ---Removed (old line 38):           "500":{
    ---Removed (old line 39):             "description":"Internal Server Error",
    ---Removed (old line 40):             "content":{
    ---Removed (old line 41):               "application/json":{
    ---Removed (old line 42):                 "schema":{
    ---Removed (old line 43):                   "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 46):         "responses": {
    +++Added (new line 47):           "201": {
    +++Added (new line 48):             "description": "Registration Token is valid",
    +++Added (new line 49):             "content": {
    +++Added (new line 50):               "application/json": {
    +++Added (new line 51):                 "schema": {
    +++Added (new line 52):                   "$ref": "#/components/schemas/DeferredResultResponseEntityTan"
    ---Removed (old line 48):           "400":{
    ---Removed (old line 49):             "description":"GUID/TeleTAN already exists.",
    ---Removed (old line 50):             "content":{
    ---Removed (old line 51):               "application/json":{
    ---Removed (old line 52):                 "schema":{
    ---Removed (old line 53):                   "$ref":"#/components/schemas/RegistrationToken"
    ---Removed (old line 54):                 }
    ---Removed (old line 55):               }
    ---Removed (old line 56):             }
    +++Added (new line 57):           "400": {
    +++Added (new line 58):             "description": "Registration Token does not exist"
    ---Removed (old line 58):           "200":{
    ---Removed (old line 59):             "description":"GUID/TeleTAN found",
    ---Removed (old line 60):             "content":{
    ---Removed (old line 61):               "application/json":{
    ---Removed (old line 62):                 "schema":{
    ---Removed (old line 63):                   "$ref":"#/components/schemas/RegistrationToken"
    ---Removed (old line 64):                 }
    ---Removed (old line 65):               }
    ---Removed (old line 66):             }
    +++Added (new line 60):           "500": {
    +++Added (new line 61):             "description": "Internal Server Error"
    ---Removed (old line 71):     "/version/v1/tan":{
    ---Removed (old line 72):       "post":{
    ---Removed (old line 73):         "tags":[
    ---Removed (old line 74):           "verification-controller"
    +++Added (new line 66):     "/version/v1/testresult": {
    +++Added (new line 67):       "post": {
    +++Added (new line 68):         "tags": [
    +++Added (new line 69):           "external-test-state-controller"
    +++Added (new line 70):         ],
    +++Added (new line 71):         "summary": "COVID-19 test result for given RegistrationToken",
    +++Added (new line 72):         "description": "Gets the result of COVID-19 Test. If the RegistrationToken belongs to a TeleTan the result is always positive",
    +++Added (new line 73):         "operationId": "getTestState",
    +++Added (new line 74):         "parameters": [
    +++Added (new line 75):           {
    +++Added (new line 76):             "name": "cwa-fake",
    +++Added (new line 77):             "in": "header",
    +++Added (new line 78):             "required": false,
    +++Added (new line 79):             "schema": {
    +++Added (new line 80):               "type": "string"
    +++Added (new line 81):             }
    +++Added (new line 82):           }
    ---Removed (old line 76):         "summary":"Generates a Tan",
    ---Removed (old line 77):         "description":"Generates a TAN on input of Registration Token. With the TAN one can submit his Diagnosis keys",
    ---Removed (old line 78):         "operationId":"generateTan",
    ---Removed (old line 79):         "requestBody":{
    ---Removed (old line 80):           "content":{
    ---Removed (old line 81):             "application/json":{
    ---Removed (old line 82):               "schema":{
    ---Removed (old line 83):                 "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 84):         "requestBody": {
    +++Added (new line 85):           "content": {
    +++Added (new line 86):             "application/json": {
    +++Added (new line 87):               "schema": {
    +++Added (new line 88):                 "$ref": "#/components/schemas/RegistrationToken"
    ---Removed (old line 87):           "required":true
    +++Added (new line 92):           "required": true
    ---Removed (old line 89):         "responses":{
    ---Removed (old line 90):           "500":{
    ---Removed (old line 91):             "description":"Internal Server Error",
    ---Removed (old line 92):             "content":{
    ---Removed (old line 93):               "application/json":{
    ---Removed (old line 94):                 "schema":{
    ---Removed (old line 95):                   "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 94):         "responses": {
    +++Added (new line 95):           "200": {
    +++Added (new line 96):             "description": "Testresult retrieved",
    +++Added (new line 97):             "content": {
    +++Added (new line 98):               "application/json": {
    +++Added (new line 99):                 "schema": {
    +++Added (new line 100):                   "$ref": "#/components/schemas/DeferredResultResponseEntityTestResult"
    ---Removed (old line 100):           "400":{
    ---Removed (old line 101):             "description":"Registration Token does not exist",
    ---Removed (old line 102):             "content":{
    ---Removed (old line 103):               "application/json":{
    ---Removed (old line 104):                 "schema":{
    ---Removed (old line 105):                   "$ref":"#/components/schemas/Tan"
    ---Removed (old line 106):                 }
    ---Removed (old line 107):               }
    ---Removed (old line 108):             }
    +++Added (new line 105):           "400": {
    +++Added (new line 106):             "description": "Bad Request"
    ---Removed (old line 110):           "201":{
    ---Removed (old line 111):             "description":"Registration Token is valid",
    ---Removed (old line 112):             "content":{
    ---Removed (old line 113):               "application/json":{
    ---Removed (old line 114):                 "schema":{
    ---Removed (old line 115):                   "$ref":"#/components/schemas/Tan"
    ---Removed (old line 116):                 }
    ---Removed (old line 117):               }
    ---Removed (old line 118):             }
    +++Added (new line 108):           "500": {
    +++Added (new line 109):             "description": "Internal Server Error"
    ---Removed (old line 123):     "/version/v1/testresult":{
    ---Removed (old line 124):       "post":{
    ---Removed (old line 125):         "tags":[
    ---Removed (old line 126):           "verification-controller"
    +++Added (new line 114):     "/version/v1/registrationToken": {
    +++Added (new line 115):       "post": {
    +++Added (new line 116):         "tags": [
    +++Added (new line 117):           "external-token-controller"
    ---Removed (old line 128):         "summary":"COVID-19 test result",
    ---Removed (old line 129):         "description":"Gets the result of COVID-19 Test.",
    ---Removed (old line 130):         "operationId":"getTestState",
    ---Removed (old line 131):         "requestBody":{
    ---Removed (old line 132):           "content":{
    ---Removed (old line 133):             "application/json":{
    ---Removed (old line 134):               "schema":{
    ---Removed (old line 135):                 "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 119):         "summary": "Get registration Token",
    +++Added (new line 120):         "description": "Get a registration token by providing a SHA-256 hasehd GUID or a teleTAN",
    +++Added (new line 121):         "operationId": "generateRegistrationToken",
    +++Added (new line 122):         "parameters": [
    +++Added (new line 123):           {
    +++Added (new line 124):             "name": "cwa-fake",
    +++Added (new line 125):             "in": "header",
    +++Added (new line 126):             "required": false,
    +++Added (new line 127):             "schema": {
    +++Added (new line 128):               "type": "string"
    +++Added (new line 129):             }
    +++Added (new line 130):           }
    +++Added (new line 131):         ],
    +++Added (new line 132):         "requestBody": {
    +++Added (new line 133):           "content": {
    +++Added (new line 134):             "application/json": {
    +++Added (new line 135):               "schema": {
    +++Added (new line 136):                 "$ref": "#/components/schemas/RegistrationTokenRequest"
    ---Removed (old line 139):           "required":true
    +++Added (new line 140):           "required": true
    ---Removed (old line 141):         "responses":{
    ---Removed (old line 142):           "500":{
    ---Removed (old line 143):             "description":"Internal Server Error",
    ---Removed (old line 144):             "content":{
    ---Removed (old line 145):               "application/json":{
    ---Removed (old line 146):                 "schema":{
    ---Removed (old line 147):                   "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 142):         "responses": {
    +++Added (new line 143):           "201": {
    +++Added (new line 144):             "description": "registration token generated.",
    +++Added (new line 145):             "content": {
    +++Added (new line 146):               "application/json": {
    +++Added (new line 147):                 "schema": {
    +++Added (new line 148):                   "$ref": "#/components/schemas/DeferredResultResponseEntityRegistrationToken"
    ---Removed (old line 152):           "400":{
    ---Removed (old line 153):             "description":"Bad Request",
    ---Removed (old line 154):             "content":{
    ---Removed (old line 155):               "application/json":{
    ---Removed (old line 156):                 "schema":{
    ---Removed (old line 157):                   "$ref":"#/components/schemas/TestResult"
    ---Removed (old line 158):                 }
    ---Removed (old line 159):               }
    ---Removed (old line 160):             }
    +++Added (new line 153):           "400": {
    +++Added (new line 154):             "description": "GUID/TeleTAN already exists."
    ---Removed (old line 162):           "200":{
    ---Removed (old line 163):             "description":"Testresult retrieved",
    ---Removed (old line 164):             "content":{
    ---Removed (old line 165):               "application/json":{
    ---Removed (old line 166):                 "schema":{
    ---Removed (old line 167):                   "$ref":"#/components/schemas/TestResult"
    ---Removed (old line 168):                 }
    ---Removed (old line 169):               }
    ---Removed (old line 170):             }
    +++Added (new line 156):           "500": {
    +++Added (new line 157):             "description": "Internal Server Error"
    ---Removed (old line 175):     "/version/v1/tan/verify":{
    ---Removed (old line 176):       "post":{
    ---Removed (old line 177):         "tags":[
    ---Removed (old line 178):           "verification-controller"
    +++Added (new line 162):     "/version/v1/tan/teletan": {
    +++Added (new line 163):       "post": {
    +++Added (new line 164):         "tags": [
    +++Added (new line 165):           "internal-tan-controller"
    ---Removed (old line 180):         "summary":"Verify provided Tan",
    ---Removed (old line 181):         "description":"The provided Tan is verified to be formerly issued by the verification server",
    ---Removed (old line 182):         "operationId":"verifyTan",
    ---Removed (old line 183):         "requestBody":{
    ---Removed (old line 184):           "content":{
    ---Removed (old line 185):             "application/json":{
    ---Removed (old line 186):               "schema":{
    ---Removed (old line 187):                 "$ref":"#/components/schemas/Tan"
    ---Removed (old line 188):               }
    +++Added (new line 167):         "summary": "Request generation of a teleTAN",
    +++Added (new line 168):         "description": "A teleTAN is a human readable TAN with 7 characters which is supposed to be issued via call line",
    +++Added (new line 169):         "operationId": "createTeleTan",
    +++Added (new line 170):         "parameters": [
    +++Added (new line 171):           {
    +++Added (new line 172):             "name": "Authorization",
    +++Added (new line 173):             "in": "header",
    +++Added (new line 174):             "required": true,
    +++Added (new line 175):             "schema": {
    +++Added (new line 176):               "$ref": "#/components/schemas/AuthorizationToken"
    ---Removed (old line 190):           },
    ---Removed (old line 191):           "required":true
    ---Removed (old line 192):         },
    ---Removed (old line 193):         "responses":{
    ---Removed (old line 194):           "500":{
    ---Removed (old line 195):             "description":"Internal Server Error",
    ---Removed (old line 196):             "content":{
    ---Removed (old line 197):               "application/json":{
    ---Removed (old line 198):                 "schema":{
    ---Removed (old line 199):                   "$ref":"#/components/schemas/RegistrationToken"
    ---Removed (old line 200):                 }
    ---Removed (old line 201):               }
    ---Removed (old line 202):             }
    ---Removed (old line 203):           },
    ---Removed (old line 204):           "400":{
    ---Removed (old line 205):             "description":"Bad Request",
    ---Removed (old line 206):             "content":{
    ---Removed (old line 207):               "application/json":{
    ---Removed (old line 208):                 "schema":{
    ---Removed (old line 209):                   "$ref":"#/components/schemas/TestResult"
    +++Added (new line 178):           }
    +++Added (new line 179):         ],
    +++Added (new line 180):         "responses": {
    +++Added (new line 181):           "201": {
    +++Added (new line 182):             "description": "TeleTan created",
    +++Added (new line 183):             "content": {
    +++Added (new line 184):               "application/json": {
    +++Added (new line 185):                 "schema": {
    +++Added (new line 186):                   "$ref": "#/components/schemas/TeleTan"
    ---Removed (old line 214):           "200":{
    ---Removed (old line 215):             "description":"Tan is valid an formerly issued by the verification server"
    +++Added (new line 191):           "400": {
    +++Added (new line 192):             "description": "Bad Request"
    ---Removed (old line 217):           "404":{
    ---Removed (old line 218):             "description":"Tan could not be verified"
    +++Added (new line 194):           "500": {
    +++Added (new line 195):             "description": "Internal Server Error"
    ---Removed (old line 223):     "/version/v1/tan/teletan":{
    ---Removed (old line 224):       "post":{
    ---Removed (old line 225):         "tags":[
    ---Removed (old line 226):           "verification-controller"
    +++Added (new line 200):     "/version/v1/tan/verify": {
    +++Added (new line 201):       "post": {
    +++Added (new line 202):         "tags": [
    +++Added (new line 203):           "internal-tan-controller"
    ---Removed (old line 228):         "summary":"Request generation of a TeleTan",
    ---Removed (old line 229):         "description":"A TeleTan is a human readable TAN with 7 characters which is supposed to be issued via call line",
    ---Removed (old line 230):         "operationId":"createTeleTan",
    ---Removed (old line 231):         "responses":{
    ---Removed (old line 232):           "500":{
    ---Removed (old line 233):             "description":"Internal Server Error",
    ---Removed (old line 234):             "content":{
    ---Removed (old line 235):               "application/json":{
    ---Removed (old line 236):                 "schema":{
    ---Removed (old line 237):                   "$ref":"#/components/schemas/RegistrationToken"
    +++Added (new line 205):         "summary": "Verify provided Tan",
    +++Added (new line 206):         "description": "The provided Tan is verified to be formerly issued by the verification server",
    +++Added (new line 207):         "operationId": "verifyTan",
    +++Added (new line 208):         "requestBody": {
    +++Added (new line 209):           "content": {
    +++Added (new line 210):             "application/json": {
    +++Added (new line 211):               "schema": {
    +++Added (new line 212):                 "$ref": "#/components/schemas/Tan"
    +++Added (new line 213):               }
    +++Added (new line 214):             }
    +++Added (new line 215):           },
    +++Added (new line 216):           "required": true
    +++Added (new line 217):         },
    +++Added (new line 218):         "responses": {
    +++Added (new line 219):           "200": {
    +++Added (new line 220):             "description": "Tan is valid an formerly issued by the verification server",
    +++Added (new line 221):             "content": {
    +++Added (new line 222):               "*/*": {
    +++Added (new line 223):                 "schema": {
    +++Added (new line 224):                   "type": "object"
    ---Removed (old line 242):           "400":{
    ---Removed (old line 243):             "description":"Bad Request",
    ---Removed (old line 244):             "content":{
    ---Removed (old line 245):               "application/json":{
    ---Removed (old line 246):                 "schema":{
    ---Removed (old line 247):                   "$ref":"#/components/schemas/TestResult"
    +++Added (new line 229):           "400": {
    +++Added (new line 230):             "description": "Bad Request"
    +++Added (new line 231):           },
    +++Added (new line 232):           "404": {
    +++Added (new line 233):             "description": "Tan could not be verified",
    +++Added (new line 234):             "content": {
    +++Added (new line 235):               "*/*": {
    +++Added (new line 236):                 "schema": {
    +++Added (new line 237):                   "type": "object"
    ---Removed (old line 252):           "201":{
    ---Removed (old line 253):             "description":"TeleTan created"
    +++Added (new line 242):           "500": {
    +++Added (new line 243):             "description": "Internal Server Error"
    ---Removed (old line 259):   "components":{
    ---Removed (old line 260):     "schemas":{
    ---Removed (old line 261):       "RegistrationTokenRequest":{
    ---Removed (old line 262):         "type":"object",
    ---Removed (old line 263):         "properties":{
    ---Removed (old line 264):           "key":{
    ---Removed (old line 265):             "type":"string"
    +++Added (new line 249):   "components": {
    +++Added (new line 250):     "schemas": {
    +++Added (new line 251):       "RegistrationToken": {
    +++Added (new line 252):         "required": [
    +++Added (new line 253):           "registrationToken"
    +++Added (new line 254):         ],
    +++Added (new line 255):         "type": "object",
    +++Added (new line 256):         "properties": {
    +++Added (new line 257):           "registrationToken": {
    +++Added (new line 258):             "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
    +++Added (new line 259):             "type": "string"
    +++Added (new line 260):           },
    +++Added (new line 261):           "responsePadding": {
    +++Added (new line 262):             "type": "string"
    +++Added (new line 263):           }
    +++Added (new line 264):         },
    +++Added (new line 265):         "description": "The registration token model."
    +++Added (new line 266):       },
    +++Added (new line 267):       "DeferredResultHandler": {
    +++Added (new line 268):         "type": "object"
    +++Added (new line 269):       },
    +++Added (new line 270):       "DeferredResultResponseEntityTan": {
    +++Added (new line 271):         "type": "object",
    +++Added (new line 272):         "properties": {
    +++Added (new line 273):           "resultHandler": {
    +++Added (new line 274):             "$ref": "#/components/schemas/DeferredResultHandler"
    +++Added (new line 275):           },
    +++Added (new line 276):           "result": {
    +++Added (new line 277):             "type": "object"
    +++Added (new line 278):           },
    +++Added (new line 279):           "resultInternal": {
    +++Added (new line 280):             "type": "boolean",
    +++Added (new line 281):             "writeOnly": true
    +++Added (new line 282):           },
    +++Added (new line 283):           "setOrExpired": {
    +++Added (new line 284):             "type": "boolean"
    +++Added (new line 285):           },
    +++Added (new line 286):           "errorResult": {
    +++Added (new line 287):             "type": "boolean",
    +++Added (new line 288):             "writeOnly": true
    +++Added (new line 289):           }
    +++Added (new line 290):         }
    +++Added (new line 291):       },
    +++Added (new line 292):       "DeferredResultResponseEntityTestResult": {
    +++Added (new line 293):         "type": "object",
    +++Added (new line 294):         "properties": {
    +++Added (new line 295):           "resultHandler": {
    +++Added (new line 296):             "$ref": "#/components/schemas/DeferredResultHandler"
    +++Added (new line 297):           },
    +++Added (new line 298):           "result": {
    +++Added (new line 299):             "type": "object"
    +++Added (new line 300):           },
    +++Added (new line 301):           "resultInternal": {
    +++Added (new line 302):             "type": "boolean",
    +++Added (new line 303):             "writeOnly": true
    +++Added (new line 304):           },
    +++Added (new line 305):           "setOrExpired": {
    +++Added (new line 306):             "type": "boolean"
    +++Added (new line 307):           },
    +++Added (new line 308):           "errorResult": {
    +++Added (new line 309):             "type": "boolean",
    +++Added (new line 310):             "writeOnly": true
    +++Added (new line 311):           }
    +++Added (new line 312):         }
    +++Added (new line 313):       },
    +++Added (new line 314):       "RegistrationTokenRequest": {
    +++Added (new line 315):         "type": "object",
    +++Added (new line 316):         "properties": {
    +++Added (new line 317):           "key": {
    +++Added (new line 318):             "type": "string"
    ---Removed (old line 267):           "keyType":{
    ---Removed (old line 268):             "type":"string",
    ---Removed (old line 269):             "enum":[
    +++Added (new line 320):           "keyType": {
    +++Added (new line 321):             "type": "string",
    +++Added (new line 322):             "enum": [
    ---Removed (old line 274):         }
    +++Added (new line 327):         },
    +++Added (new line 328):         "description": "The registration token request model."
    ---Removed (old line 276):       "RegistrationToken":{
    ---Removed (old line 277):         "type":"object",
    ---Removed (old line 278):         "properties":{
    ---Removed (old line 279):           "registrationToken":{
    ---Removed (old line 280):             "type":"string"
    +++Added (new line 330):       "DeferredResultResponseEntityRegistrationToken": {
    +++Added (new line 331):         "type": "object",
    +++Added (new line 332):         "properties": {
    +++Added (new line 333):           "resultHandler": {
    +++Added (new line 334):             "$ref": "#/components/schemas/DeferredResultHandler"
    +++Added (new line 335):           },
    +++Added (new line 336):           "result": {
    +++Added (new line 337):             "type": "object"
    +++Added (new line 338):           },
    +++Added (new line 339):           "resultInternal": {
    +++Added (new line 340):             "type": "boolean",
    +++Added (new line 341):             "writeOnly": true
    +++Added (new line 342):           },
    +++Added (new line 343):           "setOrExpired": {
    +++Added (new line 344):             "type": "boolean"
    +++Added (new line 345):           },
    +++Added (new line 346):           "errorResult": {
    +++Added (new line 347):             "type": "boolean",
    +++Added (new line 348):             "writeOnly": true
    ---Removed (old line 284):       "Tan":{
    ---Removed (old line 285):         "type":"object",
    ---Removed (old line 286):         "properties":{
    ---Removed (old line 287):           "tan":{
    ---Removed (old line 288):             "type":"string"
    +++Added (new line 352):       "AuthorizationToken": {
    +++Added (new line 353):         "required": [
    +++Added (new line 354):           "token"
    +++Added (new line 355):         ],
    +++Added (new line 356):         "type": "object",
    +++Added (new line 357):         "properties": {
    +++Added (new line 358):           "token": {
    +++Added (new line 359):             "type": "string"
    ---Removed (old line 290):         }
    +++Added (new line 361):         },
    +++Added (new line 362):         "description": "The bearer jwt token header model."
    ---Removed (old line 292):       "TestResult":{
    ---Removed (old line 293):         "type":"object",
    ---Removed (old line 294):         "properties":{
    ---Removed (old line 295):           "testResult":{
    ---Removed (old line 296):             "type":"integer",
    ---Removed (old line 297):             "format":"int32"
    +++Added (new line 364):       "TeleTan": {
    +++Added (new line 365):         "type": "object",
    +++Added (new line 366):         "properties": {
    +++Added (new line 367):           "value": {
    +++Added (new line 368):             "type": "string"
    ---Removed (old line 299):         }
    +++Added (new line 370):         },
    +++Added (new line 371):         "description": "The teleTAN model."
    +++Added (new line 372):       },
    +++Added (new line 373):       "Tan": {
    +++Added (new line 374):         "required": [
    +++Added (new line 375):           "tan"
    +++Added (new line 376):         ],
    +++Added (new line 377):         "type": "object",
    +++Added (new line 378):         "properties": {
    +++Added (new line 379):           "tan": {
    +++Added (new line 380):             "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
    +++Added (new line 381):             "type": "string"
    +++Added (new line 382):           },
    +++Added (new line 383):           "responsePadding": {
    +++Added (new line 384):             "type": "string"
    +++Added (new line 385):           }
    +++Added (new line 386):         },
    +++Added (new line 387):         "description": "The transaction number model."
    ---Removed (old line 303): }
    +++Added (new line 391): }

