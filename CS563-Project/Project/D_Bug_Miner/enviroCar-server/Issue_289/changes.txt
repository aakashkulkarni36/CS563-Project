Issue #289: Update Jackson to v2.9.7
URL: https://github.com/enviroCar/enviroCar-server/pull/289

Commit ID: bc14637442a4ee145b34757d13319c8acce1eb2a

Commit Message: fixed warnings

Files Changed (13):
File: core/src/main/java/org/envirocar/server/core/CarSimilarityServiceImpl.java ======================
    - Additions: 2
    - Deletions: 2
=======================================================

    ---Removed (old line 45):     private static final Logger log = LoggerFactory.getLogger(CarSimilarityServiceImpl.class);
    +++Added (new line 45):     private static final Logger LOG = LoggerFactory.getLogger(CarSimilarityServiceImpl.class);
    ---Removed (old line 100):                 log.warn("Could not read Similarity Definition", ex);
    +++Added (new line 100):                 LOG.warn("Could not read Similarity Definition", ex);

File: core/src/main/java/org/envirocar/server/core/entities/TrackSummaries.java ======================
    - Additions: 5
    - Deletions: 14
=======================================================

    ---Removed (old line 30):     public TrackSummaries(){
    +++Added (new line 30):     public TrackSummaries() {
    ---Removed (old line 39):         if (this.tracklist == null){
    ---Removed (old line 40):             this.tracklist = new ArrayList<>();
    ---Removed (old line 41):         }
    ---Removed (old line 46):         this.tracklist = trackSummaries;
    +++Added (new line 43):         this.tracklist = trackSummaries == null ? new ArrayList<>() : trackSummaries;
    ---Removed (old line 50):         if (this.tracklist != null) {
    ---Removed (old line 51):             this.tracklist.add(trackSummary);
    ---Removed (old line 52):         } else {
    ---Removed (old line 53):             this.tracklist = new ArrayList<>();
    ---Removed (old line 54):             this.tracklist.add(trackSummary);
    ---Removed (old line 55):         }
    +++Added (new line 47):         this.tracklist.add(trackSummary);
    ---Removed (old line 59):         if (this.tracklist == null)
    ---Removed (old line 60):             return false;
    ---Removed (old line 61):         return (!this.tracklist.isEmpty());
    +++Added (new line 51): 
    +++Added (new line 52):         return !this.tracklist.isEmpty();

File: mongo/src/main/java/org/envirocar/server/mongo/CustomGuiceObjectFactory.java ======================
    - Additions: 4
    - Deletions: 2
=======================================================

    ---Removed (old line 42):                 clazz = Class.forName(className);
    +++Added (new line 42):                 return super.createInstance(Class.forName(className), dbObj);
    +++Added (new line 46):         } else {
    +++Added (new line 47):             return super.createInstance(clazz, dbObj);
    ---Removed (old line 47):         return super.createInstance(clazz, dbObj);
    +++Added (new line 49): 

File: mongo/src/main/java/org/envirocar/server/mongo/activities/MongoActivity.java ======================
    - Additions: 0
    - Deletions: 1
=======================================================

    ---Removed (old line 28): 

File: mongo/src/main/java/org/envirocar/server/mongo/convert/TrackSummariesConverter.java ======================
    - Additions: 50
    - Deletions: 74
=======================================================

    ---Removed (old line 37): import org.envirocar.server.core.entities.DimensionedNumber;
    +++Added (new line 37): import org.bson.types.BasicBSONList;
    ---Removed (old line 44): import org.slf4j.Logger;
    ---Removed (old line 45): import org.slf4j.LoggerFactory;
    ---Removed (old line 50): import com.mongodb.DBObject;
    ---Removed (old line 52): import com.vividsolutions.jts.geom.Geometry;
    +++Added (new line 50): import com.vividsolutions.jts.geom.PrecisionModel;
    ---Removed (old line 56):  * MongoDB type converter for {@link DimensionedNumber}s.
    +++Added (new line 53):  * MongoDB type converter for {@link TrackSummaries}.
    ---Removed (old line 60): public class TrackSummariesConverter
    ---Removed (old line 61):         extends TypeConverter implements SimpleValueConverter {
    ---Removed (old line 62): 
    ---Removed (old line 63):     private static final Logger log = LoggerFactory.getLogger(TrackSummariesConverter.class);
    +++Added (new line 57): public class TrackSummariesConverter extends TypeConverter implements SimpleValueConverter {
    +++Added (new line 58):     private static final String START_POSITION_LAT = "startPositionLat";
    +++Added (new line 59):     private static final String START_POSITION_LNG = "startPositionLng";
    +++Added (new line 60):     private static final String END_POSITION_LAT = "endPositionLat";
    +++Added (new line 61):     private static final String END_POSITION_LNG = "endPositionLng";
    +++Added (new line 62):     private static final String ID = "id";
    ---Removed (old line 93):                     .add("id", ts.getIdentifier())
    ---Removed (old line 94):                     .add("startPositionLat", startLat)
    ---Removed (old line 95):                     .add("startPositionLng", startLng)
    ---Removed (old line 96):                     .add("endPositionLat", endLat)
    ---Removed (old line 97):                     .add("endPositionLng", endLng).get();
    +++Added (new line 92):                     .add(ID, ts.getIdentifier())
    +++Added (new line 93):                     .add(START_POSITION_LAT, startLat)
    +++Added (new line 94):                     .add(START_POSITION_LNG, startLng)
    +++Added (new line 95):                     .add(END_POSITION_LAT, endLat)
    +++Added (new line 96):                     .add(END_POSITION_LNG, endLng).get();
    ---Removed (old line 117):         TrackSummaries tsm = new TrackSummaries();
    +++Added (new line 116): 
    ---Removed (old line 122):         if (o instanceof DBObject) {
    ---Removed (old line 123): 
    ---Removed (old line 124):             DBObject dbObject = (DBObject) o;
    ---Removed (old line 125):             BasicDBList trackSummaryList = (BasicDBList) dbObject;
    ---Removed (old line 126):             for (int j = 0; j < trackSummaryList.size(); j++) {
    ---Removed (old line 127):                 BasicDBObject trackSummary = (BasicDBObject) trackSummaryList.get(j);
    ---Removed (old line 128): 
    ---Removed (old line 129):                 Object b = trackSummary.get("id");
    ---Removed (old line 130):                 String id;
    ---Removed (old line 131):                 if (b instanceof String) {
    ---Removed (old line 132):                     id = b.toString();
    ---Removed (old line 133):                 } else {
    ---Removed (old line 134):                     throw new MappingException("Can not decode " + b);
    ---Removed (old line 135):                 }
    ---Removed (old line 136):                 Object sPlat = trackSummary.get("startPositionLat");
    ---Removed (old line 137):                 double value;
    ---Removed (old line 138):                 if (sPlat instanceof Number) {
    ---Removed (old line 139):                     value = ((Number) sPlat).doubleValue();
    ---Removed (old line 140):                 } else {
    ---Removed (old line 141):                     throw new MappingException("Can not decode " + b);
    ---Removed (old line 142):                 }
    ---Removed (old line 143):                 Object sPlng = trackSummary.get("startPositionLng");
    ---Removed (old line 144):                 double value2;
    ---Removed (old line 145):                 if (sPlng instanceof Number) {
    ---Removed (old line 146):                     value2 = ((Number) sPlng).doubleValue();
    ---Removed (old line 147):                 } else {
    ---Removed (old line 148):                     throw new MappingException("Can not decode " + b);
    ---Removed (old line 149):                 }
    ---Removed (old line 150):                 Object ePlat = trackSummary.get("endPositionLat");
    ---Removed (old line 151):                 double value3;
    ---Removed (old line 152):                 if (ePlat instanceof Number) {
    ---Removed (old line 153):                     value3 = ((Number) ePlat).doubleValue();
    ---Removed (old line 154):                 } else {
    ---Removed (old line 155):                     throw new MappingException("Can not decode " + b);
    ---Removed (old line 156):                 }
    ---Removed (old line 157):                 Object ePlng = trackSummary.get("endPositionLng");
    ---Removed (old line 158):                 double value4;
    ---Removed (old line 159):                 if (ePlng instanceof Number) {
    ---Removed (old line 160):                     value4 = ((Number) ePlng).doubleValue();
    ---Removed (old line 161):                 } else {
    ---Removed (old line 162):                     throw new MappingException("Can not decode " + b);
    ---Removed (old line 163):                 }
    ---Removed (old line 164): 
    ---Removed (old line 165):                 TrackSummary ts = new TrackSummary();
    ---Removed (old line 166):                 ts.setIdentifier(id);
    ---Removed (old line 167): 
    ---Removed (old line 168):                 GeometryFactory geomFac = new GeometryFactory();
    ---Removed (old line 169):                 Coordinate startPt = new Coordinate(value, value2);
    ---Removed (old line 170):                 Coordinate endPt = new Coordinate(value3, value4);
    ---Removed (old line 171):                 Geometry startPos = geomFac.createPoint(startPt);
    ---Removed (old line 172):                 Geometry endPos = geomFac.createPoint(endPt);
    ---Removed (old line 173):                 ts.setStartPosition(startPos);
    ---Removed (old line 174):                 ts.setEndPosition(endPos);
    ---Removed (old line 175):                 tsm.addTrackSummary(ts);
    +++Added (new line 121):         TrackSummaries tsm = new TrackSummaries();
    +++Added (new line 122):         if (!(o instanceof BasicBSONList)) {
    +++Added (new line 123):             return tsm;
    +++Added (new line 124):         }
    +++Added (new line 125):         GeometryFactory geomFac = new GeometryFactory(new PrecisionModel(PrecisionModel.FLOATING), 4326);
    +++Added (new line 126): 
    +++Added (new line 127):         BasicBSONList list = (BasicBSONList) o;
    +++Added (new line 128): 
    +++Added (new line 129):         for (int j = 0; j < list.size(); j++) {
    +++Added (new line 130):             BasicDBObject trackSummary = (BasicDBObject) list.get(j);
    +++Added (new line 131): 
    +++Added (new line 132):             Object id = trackSummary.get(ID);
    +++Added (new line 133):             Object startLat = trackSummary.get(START_POSITION_LAT);
    +++Added (new line 134):             Object startLong = trackSummary.get(START_POSITION_LNG);
    +++Added (new line 135):             Object endLat = trackSummary.get(END_POSITION_LAT);
    +++Added (new line 136):             Object endLong = trackSummary.get(END_POSITION_LNG);
    +++Added (new line 137): 
    +++Added (new line 138):             if (!(id instanceof String) ||
    +++Added (new line 139):                 !(startLat instanceof Number) ||
    +++Added (new line 140):                 !(startLong instanceof Number) ||
    +++Added (new line 141):                 !(endLat instanceof Number) ||
    +++Added (new line 142):                 !(endLong instanceof Number)) {
    +++Added (new line 143):                 throw new MappingException("Can not decode " + id);
    ---Removed (old line 178):             return tsm;
    ---Removed (old line 179):         }// else {
    ---Removed (old line 180):         // throw new MappingException("Can not decode " + o);
    ---Removed (old line 181):         //}
    +++Added (new line 146):             TrackSummary ts = new TrackSummary();
    +++Added (new line 147):             ts.setIdentifier((String) id);
    +++Added (new line 148): 
    +++Added (new line 149):             Coordinate start = new Coordinate(((Number) startLat).doubleValue(),
    +++Added (new line 150):                                               ((Number) startLong).doubleValue());
    +++Added (new line 151):             Coordinate end = new Coordinate(((Number) endLat).doubleValue(),
    +++Added (new line 152):                                             ((Number) endLong).doubleValue());
    +++Added (new line 153):             ts.setStartPosition(geomFac.createPoint(start));
    +++Added (new line 154):             ts.setEndPosition(geomFac.createPoint(end));
    +++Added (new line 155): 
    +++Added (new line 156):             tsm.addTrackSummary(ts);
    +++Added (new line 157):         }

File: mongo/src/main/java/org/envirocar/server/mongo/dao/AbstractMongoDao.java ======================
    - Additions: 5
    - Deletions: 1
=======================================================

    +++Added (new line 106):     protected Iterable<E> fetch(Query<E> q, FindOptions options) {
    +++Added (new line 107):         return dao.find(q).fetch(options);
    +++Added (new line 108):     }
    +++Added (new line 109): 
    ---Removed (old line 115):         return createPaginatedIterable(q.fetch(findOptions), p, count);
    +++Added (new line 119):         return createPaginatedIterable(fetch(q,findOptions), p, count);

File: mongo/src/main/java/org/envirocar/server/mongo/dao/MongoMeasurementDao.java ======================
    - Additions: 43
    - Deletions: 66
=======================================================

    +++Added (new line 19): import static java.util.stream.Collectors.toList;
    +++Added (new line 25): import java.util.stream.StreamSupport;
    ---Removed (old line 56): import com.google.common.collect.Lists;
    ---Removed (old line 82):     private static final String TRACK_NAME_PATH = MongoUtils.path(TRACKS, MongoMeasurement.TRACK, MongoMeasurement.IDENTIFIER);
    ---Removed (old line 83):     private static final String TRACK_NAME_VALUE = MongoUtils
    ---Removed (old line 84):             .valueOf(TRACK_NAME_PATH);
    ---Removed (old line 85):     public static final String TRACK_VALUE = MongoUtils
    ---Removed (old line 86):             .valueOf(MongoMeasurement.TRACK);
    +++Added (new line 83):     private static final String TRACK_NAME_PATH = MongoUtils
    +++Added (new line 84):             .path(TRACKS, MongoMeasurement.TRACK, MongoMeasurement.IDENTIFIER);
    +++Added (new line 85):     private static final String TRACK_NAME_VALUE = MongoUtils.valueOf(TRACK_NAME_PATH);
    +++Added (new line 86):     public static final String TRACK_VALUE = MongoUtils.valueOf(MongoMeasurement.TRACK);
    ---Removed (old line 89): 
    ---Removed (old line 94):     protected MongoMeasurementDao(MongoDB mongoDB,
    ---Removed (old line 95):                                   GeometryConverter<BSONObject> geometryConverter) {
    +++Added (new line 93):     protected MongoMeasurementDao(MongoDB mongoDB, GeometryConverter<BSONObject> geometryConverter) {
    ---Removed (old line 116):          if (m.hasTrack()) {
    +++Added (new line 114):         if (m.hasTrack()) {
    ---Removed (old line 160):             q.field(MongoMeasurement.TRACK)
    ---Removed (old line 161):                     .equal(key(request.getTrack()));
    +++Added (new line 158):             q.field(MongoMeasurement.TRACK).equal(key(request.getTrack()));
    ---Removed (old line 164):             q.field(MongoMeasurement.USER)
    ---Removed (old line 165):                     .equal(key(request.getUser()));
    +++Added (new line 161):             q.field(MongoMeasurement.USER).equal(key(request.getUser()));
    ---Removed (old line 168):             MorphiaUtils.temporalFilter(q.field(MongoMeasurement.TIME),
    ---Removed (old line 169):                                            request.getTemporalFilter());
    +++Added (new line 164):             MorphiaUtils.temporalFilter(q.field(MongoMeasurement.TIME), request.getTemporalFilter());
    ---Removed (old line 179):                 q.add(MongoMeasurement.GEOMETRY,
    ---Removed (old line 180):                       MongoUtils.spatialFilter(sf, geometryConverter));
    +++Added (new line 174):                 q.add(MongoMeasurement.GEOMETRY, MongoUtils.spatialFilter(sf, geometryConverter));
    ---Removed (old line 182):                 log.error("Error while applying spatial filter: " + e
    ---Removed (old line 183):                           .getLocalizedMessage());
    +++Added (new line 176):                 log.error("Error while applying spatial filter: {}", e.getLocalizedMessage());
    ---Removed (old line 193):             q.add(MongoMeasurement.TIME,
    ---Removed (old line 194):                   MongoUtils.temporalFilter(request.getTemporalFilter()));
    +++Added (new line 186):             q.add(MongoMeasurement.TIME, MongoUtils.temporalFilter(request.getTemporalFilter()));
    ---Removed (old line 199): 	@Override
    +++Added (new line 191):     @Override
    ---Removed (old line 215):             log.error("Error removing user {} from measurement: {}",
    ---Removed (old line 216):                       user, result.getWriteResult());
    +++Added (new line 207):             log.error("Error removing user {} from measurement: {}", user, result.getWriteResult());
    ---Removed (old line 218):             log.debug("Removed user {} from {} measurements",
    ---Removed (old line 219):                       user, result.getUpdatedCount());
    +++Added (new line 209):             log.debug("Removed user {} from {} measurements", user, result.getUpdatedCount());
    ---Removed (old line 226):             log.debug("Removed user {} from {} measurement",
    ---Removed (old line 227):                       user, result.getN());
    +++Added (new line 216):             log.debug("Removed user {} from {} measurement", user, result.getN());
    ---Removed (old line 229):             log.error("Error removing user {} from measurement: {}",
    ---Removed (old line 230):                       user, result);
    +++Added (new line 218):             log.error("Error removing user {} from measurement: {}", user, result);
    ---Removed (old line 235):     protected Measurements createPaginatedIterable(
    ---Removed (old line 236):             Iterable<MongoMeasurement> i,
    ---Removed (old line 237):             Pagination p, long count) {
    ---Removed (old line 238):         return Measurements.from(i).withPagination(p).withElements(count)
    ---Removed (old line 239):                 .build();
    +++Added (new line 223):     protected Measurements createPaginatedIterable(Iterable<MongoMeasurement> i, Pagination p, long count) {
    +++Added (new line 224):         return Measurements.from(i).withPagination(p).withElements(count).build();
    ---Removed (old line 245):             log.debug("Removed track {} from {} measurements",
    ---Removed (old line 246):                       track, delete.getN());
    +++Added (new line 230):             log.debug("Removed track {} from {} measurements", track, delete.getN());
    ---Removed (old line 248):             log.error("Error removing track {} from measurements: {}",
    ---Removed (old line 249):                       track, delete);
    +++Added (new line 232):             log.error("Error removing track {} from measurements: {}", track, delete);
    ---Removed (old line 256):         	SpatialFilter sf = filter.getSpatialFilter();
    ---Removed (old line 257):         	if (sf.getOperator()==SpatialFilterOperator.BBOX){
    ---Removed (old line 258):         		ops.add(matchGeometry(filter.getSpatialFilter().getGeom()));
    ---Removed (old line 259):         	}
    ---Removed (old line 260):         	//TODO add further spatial filters
    +++Added (new line 239):             SpatialFilter sf = filter.getSpatialFilter();
    +++Added (new line 240):             if (sf.getOperator() == SpatialFilterOperator.BBOX) {
    +++Added (new line 241):                 ops.add(matchGeometry(filter.getSpatialFilter().getGeom()));
    +++Added (new line 242):             }
    +++Added (new line 243):             //TODO add further spatial filters
    +++Added (new line 254): 
    ---Removed (old line 288):         return MongoUtils.match(MongoMeasurement.GEOMETRY,
    ---Removed (old line 289):                                 withinGeometry(polygon));
    +++Added (new line 272):         return MongoUtils.match(MongoMeasurement.GEOMETRY, withinGeometry(polygon));
    ---Removed (old line 301):         return MongoUtils.match(MongoMeasurement.TIME,
    ---Removed (old line 302):                                 MongoUtils.temporalFilter(tf));
    +++Added (new line 284):         return MongoUtils.match(MongoMeasurement.TIME, MongoUtils.temporalFilter(tf));
    ---Removed (old line 324):     protected List<Key<MongoTrack>> toKeyList(
    ---Removed (old line 325):             Iterable<DBObject> res) {
    ---Removed (old line 326):         List<Key<MongoTrack>> keys = Lists.newLinkedList();
    ---Removed (old line 327):         for (DBObject obj : res) {
    ---Removed (old line 328):             for (Object refObj : (BasicDBList) obj.get(TRACKS)) {
    ---Removed (old line 329):                 DBRef ref = (DBRef) refObj;
    ---Removed (old line 330):                 Key<MongoTrack> key = getMapper().refToKey(ref);
    ---Removed (old line 331):                 keys.add(key);
    ---Removed (old line 332):             }
    ---Removed (old line 333):         }
    ---Removed (old line 334):         return keys;
    +++Added (new line 306):     protected List<Key<MongoTrack>> toKeyList(Iterable<DBObject> res) {
    +++Added (new line 307):         return StreamSupport.stream(res.spliterator(), false)
    +++Added (new line 308):                 .map(obj -> (BasicDBList) obj.get(TRACKS))
    +++Added (new line 309):                 .flatMap(BasicDBList::stream)
    +++Added (new line 310):                 .map(refObj -> (DBRef) refObj)
    +++Added (new line 311):                 .map(getMapper()::<MongoTrack>refToKey)
    +++Added (new line 312):                 .collect(toList());
    ---Removed (old line 346):         if (dbDecoderFactory == null){
    +++Added (new line 324):         if (dbDecoderFactory == null) {
    ---Removed (old line 355):             if (p.getBegin()> 0) {
    +++Added (new line 333):             if (p.getBegin() > 0) {
    ---Removed (old line 365):         Iterable<MongoMeasurement> i =
    ---Removed (old line 366):                 new MorphiaIterator<>(ds,
    ---Removed (old line 367):                 cursor, mapper, MongoMeasurement.class, coll.getName(),
    ---Removed (old line 368):                 mapper.createEntityCache());
    +++Added (new line 343):         Iterable<MongoMeasurement> i = new MorphiaIterator<>(ds,
    +++Added (new line 344):                                                              cursor, mapper, MongoMeasurement.class, coll.getName(),
    +++Added (new line 345):                                                              mapper.createEntityCache());

File: mongo/src/main/java/org/envirocar/server/mongo/dao/MongoStatisticsDao.java ======================
    - Additions: 21
    - Deletions: 49
=======================================================

    ---Removed (old line 65):     public static final String PHENOMENON_NAME_PATH =
    ---Removed (old line 66):             MongoUtils.path(MongoMeasurement.PHENOMENONS,
    ---Removed (old line 67):                             MongoMeasurementValue.PHENOMENON,
    ---Removed (old line 68):                             MongoPhenomenon.NAME);
    ---Removed (old line 69):     public static final String PHENOMENONS_VALUE =
    ---Removed (old line 70):             MongoUtils.valueOf(MongoMeasurement.PHENOMENONS);
    ---Removed (old line 71):     public static final String PHENOMENONS_VALUE_VALUE =
    ---Removed (old line 72):             MongoUtils.valueOf(MongoMeasurement.PHENOMENONS,
    ---Removed (old line 73):                                MongoMeasurementValue.VALUE);
    ---Removed (old line 74):     public static final String PHENOMENON_NAME_VALUE =
    ---Removed (old line 75):             MongoUtils.valueOf(PHENOMENON_NAME_PATH);
    ---Removed (old line 76):     public static final String TRACK_VALUE =
    ---Removed (old line 77):             MongoUtils.valueOf(MongoMeasurement.TRACK);
    ---Removed (old line 78):     public static final String USER_VALUE =
    ---Removed (old line 79):             MongoUtils.valueOf(MongoMeasurement.USER);
    ---Removed (old line 80):     public static final String SENSOR_ID_PATH =
    ---Removed (old line 81):             MongoUtils.path(MongoMeasurement.SENSOR,
    ---Removed (old line 82):                             MongoSensor.ID);
    ---Removed (old line 83):     public static final String SENSOR_ID_VALUE =
    ---Removed (old line 84):             MongoUtils.valueOf(SENSOR_ID_PATH);
    ---Removed (old line 85):     private static final String SENSOR_VALUE =
    ---Removed (old line 86):             MongoUtils.valueOf(MongoMeasurement.SENSOR);
    +++Added (new line 65):     public static final String PHENOMENON_NAME_PATH = MongoUtils.path(MongoMeasurement.PHENOMENONS,
    +++Added (new line 66):                                                                       MongoMeasurementValue.PHENOMENON,
    +++Added (new line 67):                                                                       MongoPhenomenon.NAME);
    +++Added (new line 68):     public static final String PHENOMENONS_VALUE = MongoUtils.valueOf(MongoMeasurement.PHENOMENONS);
    +++Added (new line 69):     public static final String PHENOMENONS_VALUE_VALUE = MongoUtils.valueOf(MongoMeasurement.PHENOMENONS,
    +++Added (new line 70):                                                                             MongoMeasurementValue.VALUE);
    +++Added (new line 71):     public static final String PHENOMENON_NAME_VALUE = MongoUtils.valueOf(PHENOMENON_NAME_PATH);
    +++Added (new line 72):     public static final String TRACK_VALUE = MongoUtils.valueOf(MongoMeasurement.TRACK);
    +++Added (new line 73):     public static final String USER_VALUE = MongoUtils.valueOf(MongoMeasurement.USER);
    +++Added (new line 74):     public static final String SENSOR_ID_PATH = MongoUtils.path(MongoMeasurement.SENSOR,
    +++Added (new line 75):                                                                 MongoSensor.ID);
    +++Added (new line 76):     public static final String SENSOR_ID_VALUE = MongoUtils.valueOf(SENSOR_ID_PATH);
    +++Added (new line 77):     private static final String SENSOR_VALUE = MongoUtils.valueOf(MongoMeasurement.SENSOR);
    ---Removed (old line 95): 
    ---Removed (old line 119):                 /*
    ---Removed (old line 120):                 overall stats
    ---Removed (old line 121):                 */
    +++Added (new line 109):                 // overall stats
    ---Removed (old line 124):             }
    ---Removed (old line 125):             else if (!request.hasSensor() && !request.hasTrack() && request.hasUser()) {
    ---Removed (old line 126):                 /*
    ---Removed (old line 127):                 user stats
    ---Removed (old line 128):                 */
    +++Added (new line 112):             } else if (!request.hasSensor() && !request.hasTrack() && request.hasUser()) {
    +++Added (new line 113):                 // user stats
    ---Removed (old line 131):             }
    ---Removed (old line 132):             else {
    +++Added (new line 116):             } else {
    ---Removed (old line 140):         Iterable<DBObject> aggregate = aggregate(matches(request),
    ---Removed (old line 141):                                   project(),
    ---Removed (old line 142):                                   unwind(),
    ---Removed (old line 143):                                   group());
    ---Removed (old line 144): 
    ---Removed (old line 145):         List<MongoStatistic> statistics =
    ---Removed (old line 146):                     parseStatistics(aggregate);
    +++Added (new line 124):         Iterable<DBObject> aggregate = aggregate(matches(request), project(), unwind(), group());
    +++Added (new line 125):         List<MongoStatistic> statistics = parseStatistics(aggregate);
    ---Removed (old line 152): 
    ---Removed (old line 157):         return new MongoStatisticKey(mongoDB.key(track),
    ---Removed (old line 158):                                      mongoDB.key(user),
    ---Removed (old line 159):                                      mongoDB.key(sensor));
    +++Added (new line 135):         return new MongoStatisticKey(mongoDB.key(track), mongoDB.key(user), mongoDB.key(sensor));
    ---Removed (old line 189):         stat.setMeasurements(MongoUtils
    ---Removed (old line 190):                 .asLong(result, MongoStatistic.MEASUREMENTS));
    +++Added (new line 165):         stat.setMeasurements(MongoUtils.asLong(result, MongoStatistic.MEASUREMENTS));
    ---Removed (old line 259): 
    ---Removed (old line 260): 
    ---Removed (old line 263): 

File: mongo/src/main/java/org/envirocar/server/mongo/dao/MongoUserDao.java ======================
    - Additions: 7
    - Deletions: 15
=======================================================

    ---Removed (old line 55): public class MongoUserDao extends AbstractMongoDao<String, MongoUser, Users>
    ---Removed (old line 56):         implements UserDao {
    ---Removed (old line 57): 
    ---Removed (old line 58):     private static final Logger log = LoggerFactory
    ---Removed (old line 59):             .getLogger(MongoUserDao.class);
    +++Added (new line 55): public class MongoUserDao extends AbstractMongoDao<String, MongoUser, Users> implements UserDao {
    +++Added (new line 56):     private static final Logger LOG = LoggerFactory.getLogger(MongoUserDao.class);
    ---Removed (old line 126):             log.warn("Error saving user, retrying with different confirmation code", ex);
    +++Added (new line 123):             LOG.warn("Error saving user, retrying with different confirmation code", ex);
    ---Removed (old line 157):             log.error("Error removing user {} as friend: {}",
    +++Added (new line 154):             LOG.error("Error removing user {} as friend: {}",
    ---Removed (old line 160):             log.debug("Removed user {} from {} friend lists",
    +++Added (new line 157):             LOG.debug("Removed user {} from {} friend lists",
    ---Removed (old line 280):         final Set<String> ids = Sets.newHashSetWithExpectedSize(friendRefs.size());
    ---Removed (old line 281): 
    ---Removed (old line 282):         for (Key<MongoUser> key : friendRefs) {
    ---Removed (old line 283):             ids.add((String) key.getId());
    ---Removed (old line 284):         }
    +++Added (new line 277):         final Set<String> ids = friendRefs.stream().map(Key::getId).map(x -> (String) x).collect(toSet());
    ---Removed (old line 318):         Query<MongoUser> query = q()
    ---Removed (old line 319):                 .field(MongoUser.CONFIRMATION_CODE).equal(code);
    +++Added (new line 311):         Query<MongoUser> query = q().field(MongoUser.CONFIRMATION_CODE).equal(code);

File: mongo/src/main/java/org/envirocar/server/mongo/dao/MongoUserStatisticDao.java ======================
    - Additions: 22
    - Deletions: 22
=======================================================

    ---Removed (old line 40): import org.slf4j.Logger;
    ---Removed (old line 41): import org.slf4j.LoggerFactory;
    ---Removed (old line 52):     private static final Logger log = LoggerFactory.getLogger(MongoUserStatisticDao.class);
    ---Removed (old line 53): 
    ---Removed (old line 61):     private final Function<UserStatisticFilter, MongoUserStatistic> calculateAllFunction
    ---Removed (old line 62):             = t -> calculateAndSaveUserStatistic(t, key(t));
    +++Added (new line 57):     private final Function<UserStatisticFilter, MongoUserStatistic> calculateAllFunction = (UserStatisticFilter t) -> {
    +++Added (new line 58):         return calculateAndSaveUserStatistic(t, key(t));
    +++Added (new line 59):     };
    ---Removed (old line 65):     private final Function<Object[], MongoUserStatistic> calculateOnNewTrackFunction
    ---Removed (old line 66):             = params -> {
    ---Removed (old line 67):                 UserStatisticFilter t = (UserStatisticFilter) params[0];
    ---Removed (old line 68):                 return calculateAndSaveUserStatisticOnNewTrack(t, key(t), (Track) params[1]);
    ---Removed (old line 69):             };
    +++Added (new line 62):     private final Function<Object[], MongoUserStatistic> calculateOnNewTrackFunction = (Object[] params) -> {
    +++Added (new line 63):         UserStatisticFilter t = (UserStatisticFilter) params[0];
    +++Added (new line 64):         Track track = (Track) params[1];
    +++Added (new line 65):         return calculateAndSaveUserStatisticOnNewTrack(t, key(t), track);
    +++Added (new line 66):     };
    ---Removed (old line 72):     private final Function<Object[], MongoUserStatistic> calculateOnTrackDeletionFunction
    ---Removed (old line 73):             = params -> {
    ---Removed (old line 74):                 UserStatisticFilter t = (UserStatisticFilter) params[0];
    ---Removed (old line 75):                 return calculateAndSaveUserStatisticOnTrackDeletion(t, key(t), (Track) params[1], (Measurements) params[2]);
    ---Removed (old line 76):             };
    +++Added (new line 69):     private final Function<Object[], MongoUserStatistic> calculateOnTrackDeletionFunction = (Object[] params) -> {
    +++Added (new line 70):         UserStatisticFilter t = (UserStatisticFilter) params[0];
    +++Added (new line 71):         Track track = (Track) params[1];
    +++Added (new line 72):         Measurements measurements = (Measurements) params[2];
    +++Added (new line 73):         return calculateAndSaveUserStatisticOnTrackDeletion(t, key(t), track, measurements);
    +++Added (new line 74):     };
    ---Removed (old line 92):             /**
    ---Removed (old line 93):              * calculate UserStatistics:
    ---Removed (old line 94):              */
    +++Added (new line 90):             // calculate UserStatistics:
    ---Removed (old line 101):     private MongoUserStatistic calculateAndSaveUserStatisticOnTrackDeletion(UserStatisticFilter request, MongoUserStatisticKey key, Track track, Measurements measurements) {
    +++Added (new line 97):     private MongoUserStatistic calculateAndSaveUserStatisticOnTrackDeletion(UserStatisticFilter request,
    +++Added (new line 98):                                                                             MongoUserStatisticKey key, Track track,
    +++Added (new line 99):                                                                             Measurements measurements) {
    ---Removed (old line 111):     private MongoUserStatistic calculateAndSaveUserStatisticOnNewTrack(UserStatisticFilter request, MongoUserStatisticKey key, Track track) {
    +++Added (new line 109):     private MongoUserStatistic calculateAndSaveUserStatisticOnNewTrack(UserStatisticFilter request,
    +++Added (new line 110):                                                                        MongoUserStatisticKey key, Track track) {
    ---Removed (old line 151):             this.scheduler.updateUserStatisticOnTrackDeletion(userFilter, userKey, calculateOnTrackDeletionFunction, true, t, m);
    +++Added (new line 150):             this.scheduler
    +++Added (new line 151):                     .updateUserStatisticOnTrackDeletion(userFilter, userKey, calculateOnTrackDeletionFunction, true, t, m);

File: mongo/src/main/java/org/envirocar/server/mongo/statistics/StatisticsUpdateScheduler.java ======================
    - Additions: 13
    - Deletions: 16
=======================================================

    ---Removed (old line 17): /*
    +++Added (new line 17):  /*
    ---Removed (old line 45):     private Set<MongoStatisticKey> currentKeyStatisticUpdates = new HashSet<>();
    ---Removed (old line 46):     private Set<MongoStatisticKey> updatePendingForKey = new HashSet<>();
    ---Removed (old line 47): 
    +++Added (new line 45):     private final Set<MongoStatisticKey> currentKeyStatisticUpdates = new HashSet<>();
    +++Added (new line 46):     private final Set<MongoStatisticKey> updatePendingForKey = new HashSet<>();
    ---Removed (old line 50):             Function<StatisticsFilter, MongoStatistics> calculator, boolean waitForResult) {
    +++Added (new line 49):                                  Function<StatisticsFilter, MongoStatistics> calculator, boolean waitForResult) {
    ---Removed (old line 56):                 */
    +++Added (new line 55):                  */
    ---Removed (old line 66):             }
    ---Removed (old line 67):             else {
    +++Added (new line 65):             } else {
    ---Removed (old line 85):                 */
    +++Added (new line 83):                  */
    ---Removed (old line 89):                     */
    ---Removed (old line 90):                     new Thread(() -> updateStatistics(filter, key, calculator, false)).start();
    ---Removed (old line 91):                 }
    ---Removed (old line 92):                 else {
    +++Added (new line 87):                      */
    +++Added (new line 88):                     new Thread(() -> {
    +++Added (new line 89):                         updateStatistics(filter, key, calculator, false);
    +++Added (new line 90):                     }).start();
    +++Added (new line 91):                 } else {
    ---Removed (old line 98): 
    ---Removed (old line 99): 
    ---Removed (old line 100): }
    +++Added (new line 97): }

File: mongo/src/main/java/org/envirocar/server/mongo/userstatistic/UserStatisticUpdateScheduler.java ======================
    - Additions: 29
    - Deletions: 28
=======================================================

    ---Removed (old line 34):  * TODO: This Scheduler manages updates on the UserStatistics while Tracks are added and others are deleted at same time, asynchronously.
    ---Removed (old line 35):  * TODO: The eventBus onTrackDeletion and onNewTrack is unfortunetly not managing the order of these events correctly. Fix this.
    ---Removed (old line 36):  * (errors occur if a certain created track gets deleted immediatly and the eventbus trigger deletion before creation.)
    +++Added (new line 34):  * TODO: This Scheduler manages updates on the UserStatistics while Tracks are added and others are deleted at same
    +++Added (new line 35):  * time, asynchronously. TODO: The eventBus onTrackDeletion and onNewTrack is unfortunetly not managing the order of
    +++Added (new line 36):  * these events correctly. Fix this. (errors occur if a certain created track gets deleted immediatly and the eventbus
    +++Added (new line 37):  * trigger deletion before creation.)
    ---Removed (old line 47): 
    ---Removed (old line 58):                 */
    +++Added (new line 58):                  */
    ---Removed (old line 68):             }
    ---Removed (old line 69):             else {
    +++Added (new line 68):             } else {
    ---Removed (old line 87):                 */
    +++Added (new line 86):                  */
    ---Removed (old line 91):                     */
    ---Removed (old line 92):                     new Thread(() -> updateUserStatistic(filter, key, calculator, false)).start();
    ---Removed (old line 93):                 }
    ---Removed (old line 94):                 else {
    +++Added (new line 90):                      */
    +++Added (new line 91):                     new Thread(() -> {
    +++Added (new line 92):                         updateUserStatistic(filter, key, calculator, false);
    +++Added (new line 93):                     }).start();
    +++Added (new line 94):                 } else {
    ---Removed (old line 112):                 */
    +++Added (new line 112):                  */
    ---Removed (old line 122):             }
    ---Removed (old line 123):             else {
    +++Added (new line 122):             } else {
    ---Removed (old line 144):                 */
    +++Added (new line 143):                  */
    ---Removed (old line 148):                     */
    ---Removed (old line 149):                     new Thread(() -> updateUserStatisticOnNewTrack(filter, key, calculator, false, track)).start();
    ---Removed (old line 150):                 }
    ---Removed (old line 151):                 else {
    +++Added (new line 147):                      */
    +++Added (new line 148):                     new Thread(() -> {
    +++Added (new line 149):                         updateUserStatisticOnNewTrack(filter, key, calculator, false, track);
    +++Added (new line 150):                     }).start();
    +++Added (new line 151):                 } else {
    ---Removed (old line 170):                 */
    +++Added (new line 170):                  */
    ---Removed (old line 180):             }
    ---Removed (old line 181):             else {
    +++Added (new line 180):             } else {
    ---Removed (old line 203):                 */
    +++Added (new line 202):                  */
    ---Removed (old line 207):                     */
    ---Removed (old line 208):                     new Thread(() -> updateUserStatisticOnTrackDeletion(filter, key, calculator, false, track, measurements)).start();
    ---Removed (old line 209):                 }
    ---Removed (old line 210):                 else {
    +++Added (new line 206):                      */
    +++Added (new line 207):                     new Thread(() -> {
    +++Added (new line 208):                         updateUserStatisticOnTrackDeletion(filter, key, calculator, false, track, measurements);
    +++Added (new line 209):                     }).start();
    +++Added (new line 210):                 } else {
    +++Added (new line 216): 

File: rest/src/main/java/org/envirocar/server/rest/decoding/json/ContextKnowledge.java ======================
    - Additions: 5
    - Deletions: 0
=======================================================

    +++Added (new line 26): 
    +++Added (new line 27):     @Override
    +++Added (new line 28):     public Object clone() {
    +++Added (new line 29):         return super.clone();
    +++Added (new line 30):     }

