Issue #464: Fix shape export
URL: https://github.com/enviroCar/enviroCar-server/pull/464

Commit ID: 64726f2e57dd60a96badeca1a9c69ded1481ebb8

Commit Message: Merge pull request #464 from enviroCar/dev

Fix shape export

Files Changed (4):
File: rest/src/main/java/org/envirocar/server/rest/MediaTypes.java ======================
    - Additions: 2
    - Deletions: 0
=======================================================

    +++Added (new line 39):     String APPLICATION_X_SHAPEFILE = "application/x-shapefile";
    +++Added (new line 44):     MediaType APPLICATION_X_SHAPEFILE_TYPE = MediaType.valueOf(APPLICATION_X_SHAPEFILE);

File: rest/src/main/java/org/envirocar/server/rest/encoding/shapefile/AbstractShapefileMessageBodyWriter.java ======================
    - Additions: 7
    - Deletions: 4
=======================================================

    +++Added (new line 23): import javax.ws.rs.core.HttpHeaders;
    ---Removed (old line 43): 
    +++Added (new line 44):     public static final String CONTENT_DISPOSITION = "Content-Disposition";
    ---Removed (old line 59):         return this.classType.isAssignableFrom(type) &&
    ---Removed (old line 60):                mediaType.isCompatible(MediaTypes.APPLICATION_ZIPPED_SHP_TYPE);
    +++Added (new line 60):         return this.classType.isAssignableFrom(type) && (
    +++Added (new line 61):                 mediaType.isCompatible(MediaTypes.APPLICATION_ZIPPED_SHP_TYPE) ||
    +++Added (new line 62):                 mediaType.isCompatible(MediaTypes.APPLICATION_X_SHAPEFILE_TYPE));
    +++Added (new line 72):             h.putSingle(HttpHeaders.CONTENT_LENGTH, Files.size(shapeFile));
    ---Removed (old line 79):         if (path != null && !Files.exists(path)) {
    +++Added (new line 82):         if (path != null && Files.exists(path)) {

File: rest/src/main/java/org/envirocar/server/rest/encoding/shapefile/AbstractShapefileTrackEncoder.java ======================
    - Additions: 11
    - Deletions: 0
=======================================================

    +++Added (new line 26): import javax.ws.rs.core.MultivaluedMap;
    +++Added (new line 28): import java.io.OutputStream;
    +++Added (new line 29): import java.lang.annotation.Annotation;
    +++Added (new line 30): import java.lang.reflect.Type;
    +++Added (new line 51):     @Override
    +++Added (new line 52):     public void writeTo(Track track, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,
    +++Added (new line 53):                         MultivaluedMap<String, Object> h, OutputStream out) throws IOException {
    +++Added (new line 54):         h.putSingle(CONTENT_DISPOSITION, String.format("attachment; filename=\"%s.zip\"", track.getIdentifier()));
    +++Added (new line 55):         super.writeTo(track, type, genericType, annotations, mediaType, h, out);
    +++Added (new line 56):     }
    +++Added (new line 57): 

File: rest/src/main/java/org/envirocar/server/rest/encoding/shapefile/TrackShapefileEncoder.java ======================
    - Additions: 35
    - Deletions: 86
=======================================================

    ---Removed (old line 25): import org.envirocar.server.core.entities.MeasurementValue;
    ---Removed (old line 28): import org.envirocar.server.core.entities.Phenomenon;
    ---Removed (old line 32): import org.geotools.data.DataStoreFactorySpi;
    ---Removed (old line 33): import org.geotools.data.DefaultTransaction;
    ---Removed (old line 34): import org.geotools.data.FeatureStore;
    ---Removed (old line 35): import org.geotools.data.Transaction;
    ---Removed (old line 37): import org.geotools.data.shapefile.ShapefileDataStore;
    ---Removed (old line 38): import org.geotools.data.shapefile.ShapefileDataStoreFactory;
    ---Removed (old line 39): import org.geotools.feature.FeatureCollection;
    ---Removed (old line 40): import org.geotools.feature.NameImpl;
    +++Added (new line 31): import org.geotools.data.shapefile.ShapefileDumper;
    +++Added (new line 32): import org.geotools.data.simple.SimpleFeatureCollection;
    ---Removed (old line 61): import java.io.Serializable;
    +++Added (new line 54): import java.nio.charset.StandardCharsets;
    ---Removed (old line 65): import java.util.HashMap;
    ---Removed (old line 67): import java.util.Map;
    ---Removed (old line 71): import java.util.UUID;
    ---Removed (old line 87):     private static final String GEOMETRY_ATTRIBUTE_NAME = "geometry";
    +++Added (new line 76):     private static final String GEOMETRY_ATTRIBUTE_NAME = "the_geom";
    +++Added (new line 105):             return properties;
    ---Removed (old line 121):         return properties;
    ---Removed (old line 131):     public Path encodeShapefile(Track track, AccessRights rights, MediaType mediaType)
    ---Removed (old line 132):             throws IOException {
    +++Added (new line 120):     public Path encodeShapefile(Track track, AccessRights rights, MediaType mediaType) throws IOException {
    ---Removed (old line 134):         Path zippedShapeFile;
    ---Removed (old line 136):             Measurements measurements = dataService.getMeasurements(new MeasurementFilter(track));
    ---Removed (old line 137):             shapeDirectory = createShapeFile(track.getIdentifier(), createFeatureCollection(measurements));
    ---Removed (old line 138):             zippedShapeFile = zip(shapeDirectory);
    +++Added (new line 123):             Measurements measurements = this.dataService.getMeasurements(new MeasurementFilter(track));
    +++Added (new line 124):             shapeDirectory = createShapeFile(track.getIdentifier(), createFeatureCollection(track, measurements));
    +++Added (new line 125):             return zip(shapeDirectory);
    ---Removed (old line 142): 
    ---Removed (old line 143):         return zippedShapeFile;
    ---Removed (old line 146):     private FeatureCollection<SimpleFeatureType, SimpleFeature> createFeatureCollection(Measurements measurements) {
    ---Removed (old line 147):         SimpleFeatureType sft = createFeatureType(measurements);
    +++Added (new line 131):     private SimpleFeatureCollection createFeatureCollection(Track track, Measurements measurements) {
    +++Added (new line 132):         SimpleFeatureType sft = createFeatureType(track, measurements);
    ---Removed (old line 149): 
    ---Removed (old line 150):         List<SimpleFeature> simpleFeatureList = measurements.stream().map(measurement -> {
    ---Removed (old line 151):             sfb.set(ID_ATTRIBUTE_NAME, measurement.getIdentifier());
    ---Removed (old line 152):             sfb.set(TIME_ATTRIBUTE_NAME, dateTimeFormat.print(measurement.getTime()));
    ---Removed (old line 153):             sfb.set(GEOMETRY_ATTRIBUTE_NAME, measurement.getGeometry());
    ---Removed (old line 154):             measurement.getValues().forEach(mv -> sfb.set(getPropertyName(mv), mv.getValue().toString()));
    ---Removed (old line 155):             return sfb.buildFeature(measurement.getIdentifier());
    +++Added (new line 134):         List<SimpleFeature> simpleFeatureList = measurements.stream().map(m -> {
    +++Added (new line 135):             sfb.set(ID_ATTRIBUTE_NAME, m.getIdentifier());
    +++Added (new line 136):             sfb.set(TIME_ATTRIBUTE_NAME, this.dateTimeFormat.print(m.getTime()));
    +++Added (new line 137):             sfb.set(GEOMETRY_ATTRIBUTE_NAME, m.getGeometry());
    +++Added (new line 138):             m.getValues().forEach(mv -> sfb.set(mv.getPhenomenon().getName(), mv.getValue().toString()));
    +++Added (new line 139):             return sfb.buildFeature(m.getIdentifier());
    ---Removed (old line 161):     private SimpleFeatureType createFeatureType(Measurements measurements) {
    ---Removed (old line 162):         String uuid = UUID.randomUUID().toString().substring(0, 5);
    ---Removed (old line 163): 
    ---Removed (old line 164):         String namespace = String.format("http://enviroCar.org/%s", uuid);
    ---Removed (old line 165): 
    +++Added (new line 145):     private SimpleFeatureType createFeatureType(Track track, Measurements measurements) {
    ---Removed (old line 168):         sftb.setNamespaceURI(namespace);
    ---Removed (old line 169):         sftb.setName(new NameImpl(namespace, String.format("Feature-%s", uuid)));
    +++Added (new line 148):         sftb.setNamespaceURI("https://enviroCar.org/api/stable/tracks");
    +++Added (new line 149):         sftb.setName(track.getIdentifier());
    ---Removed (old line 173):         measurements.stream().map(Measurement::getValues).flatMap(MeasurementValues::stream)
    ---Removed (old line 174):                     .map(this::getPropertyName).distinct().forEach(name -> sftb.add(name, String.class));
    ---Removed (old line 175): 
    +++Added (new line 153):         // TODO support double, boolean, String types
    +++Added (new line 154):         measurements.stream().map(Measurement::getValues)
    +++Added (new line 155):                     .flatMap(MeasurementValues::stream)
    +++Added (new line 156):                     .map(mv -> mv.getPhenomenon().getName())
    +++Added (new line 157):                     .distinct()
    +++Added (new line 158):                     .forEach(name -> sftb.add(name, String.class));
    ---Removed (old line 179):     private String getPropertyName(MeasurementValue measurementValue) {
    ---Removed (old line 180):         Phenomenon phenomenon = measurementValue.getPhenomenon();
    ---Removed (old line 181):         return String.format("%s(%s)", phenomenon.getName(), phenomenon.getUnit());
    ---Removed (old line 182):     }
    ---Removed (old line 183): 
    ---Removed (old line 184):     private Path createShapeFile(String name, FeatureCollection<SimpleFeatureType, SimpleFeature> collection)
    +++Added (new line 162):     private Path createShapeFile(String name, SimpleFeatureCollection collection)
    ---Removed (old line 188):             Path shpFile = tempDirectory.resolve(String.format("%s.shp", name));
    ---Removed (old line 189): 
    ---Removed (old line 190):             DataStoreFactorySpi dataStoreFactory = new ShapefileDataStoreFactory();
    ---Removed (old line 191): 
    ---Removed (old line 192):             Map<String, Serializable> params = new HashMap<>();
    ---Removed (old line 193):             params.put("url", shpFile.toUri().toURL());
    ---Removed (old line 194):             params.put("create spatial index", Boolean.TRUE);
    ---Removed (old line 195): 
    ---Removed (old line 196):             ShapefileDataStore newDataStore = (ShapefileDataStore) dataStoreFactory.createNewDataStore(params);
    ---Removed (old line 197): 
    ---Removed (old line 198):             newDataStore.createSchema(collection.getSchema());
    ---Removed (old line 199):             if (collection.getSchema().getCoordinateReferenceSystem() == null) {
    ---Removed (old line 200):                 newDataStore.forceSchemaCRS(getCRS());
    ---Removed (old line 201):             } else {
    ---Removed (old line 202):                 newDataStore.forceSchemaCRS(collection.getSchema().getCoordinateReferenceSystem());
    ---Removed (old line 203):             }
    ---Removed (old line 204): 
    ---Removed (old line 205):             Transaction transaction = new DefaultTransaction("create");
    ---Removed (old line 206): 
    ---Removed (old line 207):             String typeName = newDataStore.getTypeNames()[0];
    ---Removed (old line 208):             @SuppressWarnings("unchecked")
    ---Removed (old line 209):             FeatureStore<SimpleFeatureType, SimpleFeature> featureStore
    ---Removed (old line 210):                     = (FeatureStore<SimpleFeatureType, SimpleFeature>) newDataStore.getFeatureSource(typeName);
    ---Removed (old line 211):             featureStore.setTransaction(transaction);
    ---Removed (old line 212):             try {
    ---Removed (old line 213):                 featureStore.addFeatures(collection);
    ---Removed (old line 214):                 transaction.commit();
    ---Removed (old line 215):             } catch (Exception problem) {
    ---Removed (old line 216):                 transaction.rollback();
    ---Removed (old line 217):             } finally {
    ---Removed (old line 218):                 transaction.close();
    ---Removed (old line 219):             }
    ---Removed (old line 220): 
    +++Added (new line 166):             ShapefileDumper dumper = new ShapefileDumper(tempDirectory.toFile());
    +++Added (new line 167):             dumper.setCharset(StandardCharsets.UTF_8);
    +++Added (new line 168):             dumper.setEmptyShapefileAllowed(true);
    +++Added (new line 169):             dumper.dump(collection);
    +++Added (new line 198):             return zipFile;
    ---Removed (old line 250):         return zipFile;
    ---Removed (old line 254):         if (crs == null) {
    +++Added (new line 203):         if (this.crs == null) {
    ---Removed (old line 258):                     crs = authorityFactory.createCoordinateReferenceSystem("EPSG:4326");
    +++Added (new line 207):                     this.crs = authorityFactory.createCoordinateReferenceSystem("EPSG:4326");
    ---Removed (old line 268):         return crs;
    +++Added (new line 217):         return this.crs;

